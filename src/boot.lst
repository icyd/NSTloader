GAS LISTING /tmp/ccCN8hQb.s 			page 1


   1               		.file	"boot.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.init9,"ax",@progbits
  11               	.global	__jmain
  12               		.type	__jmain, @function
  13               	__jmain:
  14               	.LFB2:
  15               		.file 1 "boot.c"
   1:boot.c        **** #include "boot.h"
   2:boot.c        **** 
   3:boot.c        **** void main (void){
   4:boot.c        ****     uint8_t Buffer[BUFFSIZE];
   5:boot.c        ****     uint8_t Boot_On = 0;
   6:boot.c        ****     uint8_t Flash_Mod = 0;
   7:boot.c        ****     uint8_t Tcounter = OVFLW;
   8:boot.c        ****     uint16_t crc;
   9:boot.c        ****     uint16_t crcflash = 0;
  10:boot.c        ****     uint16_t PagNm = 0; //Bytewise
  11:boot.c        ****     uint16_t j;
  12:boot.c        ****     volatile fncptr runapp = (fncptr)0x0000;
  13:boot.c        **** #if (SPM_PAGESIZE > 255)
  14:boot.c        ****     uint16_t i;
  15:boot.c        **** #else
  16:boot.c        ****     uint8_t i;
  17:boot.c        **** #endif
  18:boot.c        **** 
  19:boot.c        **** /*UART BAUD rate initialization*/
  20:boot.c        ****     UBRRH = UBRRV_H;
  21:boot.c        ****     UBRRL = UBRRV_L;
  22:boot.c        ****     UARTON();
  23:boot.c        ****     uart_tx(SIGNATURE_0);
  24:boot.c        ****     uart_tx(SIGNATURE_1);
  25:boot.c        ****     uart_tx(SIGNATURE_2);
  26:boot.c        ****     TIMER_ON();
  27:boot.c        **** 
  28:boot.c        **** /*Bootloader handshake*/
  29:boot.c        ****     while(Tcounter){
  30:boot.c        ****         if(DataOnRx() && (UDR == ACK)){
  31:boot.c        ****             Boot_On = 0xFF;
  32:boot.c        ****             break;
  33:boot.c        ****         }
  34:boot.c        ****         if(TIMER_OVR()){
  35:boot.c        ****             TFLAGRST();
  36:boot.c        ****             Tcounter--;
  37:boot.c        ****         }
  38:boot.c        ****     }
  39:boot.c        ****     TIMER_OFF();
  40:boot.c        **** //Begin data reception
  41:boot.c        ****     if(Boot_On){
  42:boot.c        ****         Tcounter = OVFLW;
GAS LISTING /tmp/ccCN8hQb.s 			page 2


  43:boot.c        ****         while(Tcounter){
  44:boot.c        ****             if(DataOnRx()){
  45:boot.c        ****                 Buffer[0] = UDR;
  46:boot.c        ****                 if(Buffer[0] == FRAME_1){
  47:boot.c        ****                     //Populate of buffer
  48:boot.c        ****                     for(i=BUFFSIZE;i>0;i--)
  49:boot.c        ****                         Buffer[BUFFSIZE-i]=uart_rx();
  50:boot.c        ****                     //Check of actual page number
  51:boot.c        ****                     if((Buffer[0] == (uint8_t)(PagNm>>8)) && \
  52:boot.c        ****                             (Buffer[1] == (uint8_t)PagNm)){
  53:boot.c        ****                         crc = crc16_calc(INITVAL, MASKBUFF, (BUFFSIZE-2), Buffer);
  54:boot.c        ****                         if((Buffer[BUFFSIZE-2] != (crc>>8) || \
  55:boot.c        ****                                     (Buffer[BUFFSIZE-1] != (uint8_t)crc)))
  56:boot.c        ****                             uart_tx(NACK);
  57:boot.c        ****                         else {
  58:boot.c        ****                         /*write to FLASH*/
  59:boot.c        ****                             /*Redundacy check !!!*/
  60:boot.c        ****                             if(PagNm < BOOTSTART){
  61:boot.c        ****                                 boot_page_erase(PagNm);
  62:boot.c        ****                                 boot_spm_busy_wait();
  63:boot.c        ****                                 for(i=SPM_PAGESIZE;i>0;i-=2)
  64:boot.c        ****                                     boot_page_fill((SPM_PAGESIZE-i), \
  65:boot.c        ****                                             ((Buffer[SPM_PAGESIZE-i+3]<<8) | \
  66:boot.c        ****                                             Buffer[SPM_PAGESIZE-i+2]));
  67:boot.c        ****                                 boot_spm_busy_wait();
  68:boot.c        ****                                 boot_page_write(PagNm);
  69:boot.c        ****                                 boot_spm_busy_wait();
  70:boot.c        ****                                 if(!Flash_Mod){
  71:boot.c        ****                                     Flash_Mod = 0xFF;
  72:boot.c        ****                                     eeprom_update_byte(PFLAGADD, PRGERR);
  73:boot.c        ****                                     eeprom_busy_wait();
  74:boot.c        ****                                 }
  75:boot.c        ****                                 PagNm += SPM_PAGESIZE;
  76:boot.c        ****                             }
  77:boot.c        ****                         uart_tx(ACK);
  78:boot.c        ****                         }
  79:boot.c        ****                     }
  80:boot.c        ****                     else
  81:boot.c        ****                         uart_tx(NACK);
  82:boot.c        ****                 }
  83:boot.c        ****                 else if(Buffer[0] == FRAME_2){
  84:boot.c        ****                     Buffer[0] = uart_rx();
  85:boot.c        ****                     Buffer[1] = uart_rx();
  86:boot.c        ****                     Buffer[2] = uart_rx();
  87:boot.c        ****                     Buffer[3] = uart_rx();
  88:boot.c        ****                     /*Check if the CRC receive has errors*/
  89:boot.c        ****                     if(((Buffer[0] ^ Buffer[2]) == 0xFF) && \
  90:boot.c        ****                            ((Buffer[1] ^ Buffer[3]) == 0xFF)){
  91:boot.c        ****                         crcflash = ((((uint16_t)Buffer[0]) << 8) | Buffer[1]);
  92:boot.c        ****                         uart_tx(ACK);
  93:boot.c        ****                     }
  94:boot.c        ****                     else
  95:boot.c        ****                         uart_tx(NACK);
  96:boot.c        ****                 }
  97:boot.c        ****                 else if(Buffer[0] == EOT){
  98:boot.c        ****                     TIMER_RST();
  99:boot.c        ****                     TIMER_ON(); // waits 1 sec for confirmation of EOT
GAS LISTING /tmp/ccCN8hQb.s 			page 3


 100:boot.c        ****                     uart_tx(ACK);
 101:boot.c        ****                 }
 102:boot.c        ****                 else
 103:boot.c        ****                     uart_tx(NACK);
 104:boot.c        ****             }
 105:boot.c        **** 
 106:boot.c        ****             if(TIMER_OVR()){
 107:boot.c        ****                 TFLAGRST();
 108:boot.c        ****                 Tcounter--;
 109:boot.c        ****             }
 110:boot.c        ****         }
 111:boot.c        ****         TIMER_OFF();
 112:boot.c        ****         TIMER_RST();
 113:boot.c        ****         boot_rww_enable();
 114:boot.c        ****         boot_spm_busy_wait();
 115:boot.c        ****         crc = INITVAL;
 116:boot.c        ****         for(j=PagNm;j>0;j-=SPM_PAGESIZE){
 117:boot.c        ****             for(i=SPM_PAGESIZE;i>0;i--)
 118:boot.c        ****                 Buffer[SPM_PAGESIZE-i]=pgm_read_byte((PagNm-j) + (SPM_PAGESIZE-i));
 119:boot.c        ****             crc = crc16_calc(crc, MASKFLASH, SPM_PAGESIZE, Buffer);
 120:boot.c        ****         }
 121:boot.c        ****         /*Read flash an calculate crc*/
 122:boot.c        ****         if(crcflash == crc){
 123:boot.c        ****             eeprom_update_byte(PFLAGADD, PRGOK);
 124:boot.c        ****             eeprom_busy_wait();
 125:boot.c        ****         }
 126:boot.c        ****     }
 127:boot.c        ****     TFLAGRST();
 128:boot.c        ****     Buffer[0] = eeprom_read_byte(PFLAGADD);
 129:boot.c        ****     uart_tx(Buffer[0]);
 130:boot.c        ****     while(!TxFree()){} //wait for uart to complete transmission
 131:boot.c        ****     UARTOFF();
 132:boot.c        ****     if(Buffer[0] == PRGOK)
 133:boot.c        ****         runapp();
 134:boot.c        ****     for(;;){}
 135:boot.c        **** }
 136:boot.c        **** 
 137:boot.c        **** void __jmain(void){
  16               		.loc 1 137 0
  17               		.cfi_startproc
  18               	/* prologue: naked */
  19               	/* frame size = 0 */
  20               	/* stack size = 0 */
  21               	.L__stack_usage = 0
 138:boot.c        ****     asm volatile ("clr __zero_reg__");
  22               		.loc 1 138 0
  23               	/* #APP */
  24               	 ;  138 "boot.c" 1
  25 0000 1124      		clr __zero_reg__
  26               	 ;  0 "" 2
 139:boot.c        ****     asm volatile ("out %0,__zero_reg__" :: "i" (AVR_STATUS_ADDR));
  27               		.loc 1 139 0
  28               	 ;  139 "boot.c" 1
  29 0002 1FBE      		out 63,__zero_reg__
  30               	 ;  0 "" 2
 140:boot.c        ****     asm volatile ("ldi r28,lo8(%0)" :: "i" (RAMEND));
  31               		.loc 1 140 0
GAS LISTING /tmp/ccCN8hQb.s 			page 4


  32               	 ;  140 "boot.c" 1
  33 0004 CFEF      		ldi r28,lo8(2303)
  34               	 ;  0 "" 2
 141:boot.c        ****     asm volatile ("ldi r29,hi8(%0)" :: "i" (RAMEND));
  35               		.loc 1 141 0
  36               	 ;  141 "boot.c" 1
  37 0006 D8E0      		ldi r29,hi8(2303)
  38               	 ;  0 "" 2
 142:boot.c        ****     asm volatile ("out %0,r29" :: "i" (AVR_STACK_POINTER_HI_ADDR));
  39               		.loc 1 142 0
  40               	 ;  142 "boot.c" 1
  41 0008 DEBF      		out 62,r29
  42               	 ;  0 "" 2
 143:boot.c        ****     asm volatile ("out %0,r28" :: "i" (AVR_STACK_POINTER_LO_ADDR));
  43               		.loc 1 143 0
  44               	 ;  143 "boot.c" 1
  45 000a CDBF      		out 61,r28
  46               	 ;  0 "" 2
 144:boot.c        ****     asm volatile ("rjmp main");
  47               		.loc 1 144 0
  48               	 ;  144 "boot.c" 1
  49 000c 00C0      		rjmp main
  50               	 ;  0 "" 2
  51               	/* epilogue start */
 145:boot.c        **** }
  52               		.loc 1 145 0
  53               	/* #NOAPP */
  54               		.cfi_endproc
  55               	.LFE2:
  56               		.size	__jmain, .-__jmain
  57               		.section	.text.uart_tx,"ax",@progbits
  58               	.global	uart_tx
  59               		.type	uart_tx, @function
  60               	uart_tx:
  61               	.LFB3:
 146:boot.c        **** 
 147:boot.c        **** void uart_tx(uint8_t data){
  62               		.loc 1 147 0
  63               		.cfi_startproc
  64               	/* prologue: function */
  65               	/* frame size = 0 */
  66               	/* stack size = 0 */
  67               	.L__stack_usage = 0
  68               	.LVL0:
  69               	.L3:
 148:boot.c        ****     while(!TxFree());
  70               		.loc 1 148 0 discriminator 1
  71 0000 9091 C000 		lds r25,192
  72 0004 95FF      		sbrs r25,5
  73 0006 00C0      		rjmp .L3
 149:boot.c        ****     UDR = data;
  74               		.loc 1 149 0
  75 0008 8093 C600 		sts 198,r24
  76 000c 0895      		ret
  77               		.cfi_endproc
  78               	.LFE3:
  79               		.size	uart_tx, .-uart_tx
GAS LISTING /tmp/ccCN8hQb.s 			page 5


  80               		.section	.text.uart_rx,"ax",@progbits
  81               	.global	uart_rx
  82               		.type	uart_rx, @function
  83               	uart_rx:
  84               	.LFB4:
 150:boot.c        **** }
 151:boot.c        **** 
 152:boot.c        **** uint8_t uart_rx(void){
  85               		.loc 1 152 0
  86               		.cfi_startproc
  87               	/* prologue: function */
  88               	/* frame size = 0 */
  89               	/* stack size = 0 */
  90               	.L__stack_usage = 0
  91               	.L8:
 153:boot.c        ****     while(!DataOnRx());
  92               		.loc 1 153 0 discriminator 1
  93 0000 8091 C000 		lds r24,192
  94 0004 87FF      		sbrs r24,7
  95 0006 00C0      		rjmp .L8
 154:boot.c        ****     return UDR;
  96               		.loc 1 154 0
  97 0008 8091 C600 		lds r24,198
 155:boot.c        **** }
  98               		.loc 1 155 0
  99 000c 0895      		ret
 100               		.cfi_endproc
 101               	.LFE4:
 102               		.size	uart_rx, .-uart_rx
 103               		.section	.text.startup.main,"ax",@progbits
 104               	.global	main
 105               		.type	main, @function
 106               	main:
 107               	.LFB1:
   3:boot.c        ****     uint8_t Boot_On = 0;
 108               		.loc 1 3 0
 109               		.cfi_startproc
 110 0000 CDB7      		in r28,__SP_L__
 111 0002 DEB7      		in r29,__SP_H__
 112               	.LCFI0:
 113               		.cfi_def_cfa_register 28
 114 0004 C658      		subi r28,-122
 115 0006 D109      		sbc r29,__zero_reg__
 116               	.LCFI1:
 117               		.cfi_def_cfa_offset 136
 118 0008 DEBF      		out __SP_H__,r29
 119 000a CDBF      		out __SP_L__,r28
 120               	/* prologue: function */
 121               	/* frame size = 134 */
 122               	/* stack size = 134 */
 123               	.L__stack_usage = 134
 124               	.LVL1:
  12:boot.c        **** #if (SPM_PAGESIZE > 255)
 125               		.loc 1 12 0
 126 000c CB57      		subi r28,lo8(-133)
 127 000e DF4F      		sbci r29,hi8(-133)
 128 0010 1982      		std Y+1,__zero_reg__
GAS LISTING /tmp/ccCN8hQb.s 			page 6


 129 0012 1882      		st Y,__zero_reg__
 130 0014 C558      		subi r28,lo8(133)
 131 0016 D040      		sbci r29,hi8(133)
  20:boot.c        ****     UBRRL = UBRRV_L;
 132               		.loc 1 20 0
 133 0018 1092 C500 		sts 197,__zero_reg__
  21:boot.c        ****     UARTON();
 134               		.loc 1 21 0
 135 001c 89E1      		ldi r24,lo8(25)
 136 001e 8093 C400 		sts 196,r24
  22:boot.c        ****     uart_tx(SIGNATURE_0);
 137               		.loc 1 22 0
 138 0022 8091 C100 		lds r24,193
 139 0026 8861      		ori r24,lo8(24)
 140 0028 8093 C100 		sts 193,r24
  23:boot.c        ****     uart_tx(SIGNATURE_1);
 141               		.loc 1 23 0
 142 002c 8EE1      		ldi r24,lo8(30)
 143 002e 0E94 0000 		call uart_tx
 144               	.LVL2:
  24:boot.c        ****     uart_tx(SIGNATURE_2);
 145               		.loc 1 24 0
 146 0032 85E9      		ldi r24,lo8(-107)
 147 0034 0E94 0000 		call uart_tx
 148               	.LVL3:
  25:boot.c        ****     TIMER_ON();
 149               		.loc 1 25 0
 150 0038 8FE0      		ldi r24,lo8(15)
 151 003a 0E94 0000 		call uart_tx
 152               	.LVL4:
  26:boot.c        **** 
 153               		.loc 1 26 0
 154 003e 85B5      		in r24,0x25
 155 0040 8560      		ori r24,lo8(5)
 156 0042 85BD      		out 0x25,r24
   7:boot.c        ****     uint16_t crc;
 157               		.loc 1 7 0
 158 0044 8EE1      		ldi r24,lo8(30)
 159               	.LVL5:
 160               	.L14:
  29:boot.c        ****         if(DataOnRx() && (UDR == ACK)){
 161               		.loc 1 29 0
 162 0046 8823      		tst r24
 163 0048 01F0      		breq .L64
  30:boot.c        ****             Boot_On = 0xFF;
 164               		.loc 1 30 0
 165 004a 9091 C000 		lds r25,192
 166 004e 97FF      		sbrs r25,7
 167 0050 00C0      		rjmp .L12
  30:boot.c        ****             Boot_On = 0xFF;
 168               		.loc 1 30 0 is_stmt 0 discriminator 1
 169 0052 9091 C600 		lds r25,198
 170 0056 9630      		cpi r25,lo8(6)
 171 0058 01F0      		breq .L42
 172               	.L12:
  34:boot.c        ****             TFLAGRST();
 173               		.loc 1 34 0 is_stmt 1
GAS LISTING /tmp/ccCN8hQb.s 			page 7


 174 005a A89B      		sbis 0x15,0
 175 005c 00C0      		rjmp .L14
  35:boot.c        ****             Tcounter--;
 176               		.loc 1 35 0
 177 005e A89A      		sbi 0x15,0
  36:boot.c        ****         }
 178               		.loc 1 36 0
 179 0060 8150      		subi r24,lo8(-(-1))
 180               	.LVL6:
 181 0062 00C0      		rjmp .L14
 182               	.L64:
   5:boot.c        ****     uint8_t Flash_Mod = 0;
 183               		.loc 1 5 0
 184 0064 90E0      		ldi r25,0
 185 0066 00C0      		rjmp .L13
 186               	.L42:
  31:boot.c        ****             break;
 187               		.loc 1 31 0
 188 0068 9FEF      		ldi r25,lo8(-1)
 189               	.L13:
 190               	.LVL7:
  39:boot.c        **** //Begin data reception
 191               		.loc 1 39 0
 192 006a 85B5      		in r24,0x25
 193               	.LVL8:
 194 006c 8A7F      		andi r24,lo8(-6)
 195 006e 85BD      		out 0x25,r24
  41:boot.c        ****         Tcounter = OVFLW;
 196               		.loc 1 41 0
 197 0070 9111      		cpse r25,__zero_reg__
 198 0072 00C0      		rjmp .L43
 199               	.LVL9:
 200               	.L39:
 127:boot.c        ****     Buffer[0] = eeprom_read_byte(PFLAGADD);
 201               		.loc 1 127 0
 202 0074 A89A      		sbi 0x15,0
 128:boot.c        ****     uart_tx(Buffer[0]);
 203               		.loc 1 128 0
 204 0076 8FEF      		ldi r24,lo8(-1)
 205 0078 93E0      		ldi r25,lo8(3)
 206 007a 0E94 0000 		call __eerd_byte_m328p
 207               	.LVL10:
 208 007e 8983      		std Y+1,r24
 129:boot.c        ****     while(!TxFree()){} //wait for uart to complete transmission
 209               		.loc 1 129 0
 210 0080 0E94 0000 		call uart_tx
 211               	.LVL11:
 130:boot.c        ****     UARTOFF();
 212               		.loc 1 130 0
 213 0084 00C0      		rjmp .L17
 214               	.LVL12:
 215               	.L43:
 216 0086 00E0      		ldi r16,0
 217 0088 10E0      		ldi r17,0
 218 008a A12C      		mov r10,__zero_reg__
 219 008c B12C      		mov r11,__zero_reg__
 220 008e 4EE1      		ldi r20,lo8(30)
GAS LISTING /tmp/ccCN8hQb.s 			page 8


 221 0090 D42E      		mov r13,r20
 222 0092 C12C      		mov r12,__zero_reg__
 223 0094 9E01      		movw r18,r28
 224 0096 2F5F      		subi r18,-1
 225 0098 3F4F      		sbci r19,-1
 226 009a 7901      		movw r14,r18
 227 009c 54E8      		ldi r21,lo8(-124)
 228 009e 752E      		mov r7,r21
 229 00a0 720E      		add r7,r18
  61:boot.c        ****                                 boot_spm_busy_wait();
 230               		.loc 1 61 0
 231 00a2 63E0      		ldi r22,lo8(3)
 232 00a4 662E      		mov r6,r22
  64:boot.c        ****                                             ((Buffer[SPM_PAGESIZE-i+3]<<8) | \
 233               		.loc 1 64 0
 234 00a6 5524      		clr r5
 235 00a8 5394      		inc r5
  68:boot.c        ****                                 boot_spm_busy_wait();
 236               		.loc 1 68 0
 237 00aa 75E0      		ldi r23,lo8(5)
 238 00ac 472E      		mov r4,r23
 239               	.LVL13:
 240               	.L16:
  44:boot.c        ****                 Buffer[0] = UDR;
 241               		.loc 1 44 0
 242 00ae 8091 C000 		lds r24,192
 243 00b2 87FF      		sbrs r24,7
 244 00b4 00C0      		rjmp .L18
  45:boot.c        ****                 if(Buffer[0] == FRAME_1){
 245               		.loc 1 45 0
 246 00b6 8091 C600 		lds r24,198
 247 00ba 8983      		std Y+1,r24
  46:boot.c        ****                     //Populate of buffer
 248               		.loc 1 46 0
 249 00bc 8130      		cpi r24,lo8(1)
 250 00be 01F0      		breq .+2
 251 00c0 00C0      		rjmp .L19
 252 00c2 1701      		movw r2,r14
 253               	.L20:
  49:boot.c        ****                     //Check of actual page number
 254               		.loc 1 49 0 discriminator 3
 255 00c4 0E94 0000 		call uart_rx
 256               	.LVL14:
 257 00c8 F101      		movw r30,r2
 258 00ca 8193      		st Z+,r24
 259 00cc 1F01      		movw r2,r30
 260               	.LVL15:
  48:boot.c        ****                         Buffer[BUFFSIZE-i]=uart_rx();
 261               		.loc 1 48 0 discriminator 3
 262 00ce 7E12      		cpse r7,r30
 263 00d0 00C0      		rjmp .L20
  51:boot.c        ****                             (Buffer[1] == (uint8_t)PagNm)){
 264               		.loc 1 51 0
 265 00d2 8981      		ldd r24,Y+1
 266 00d4 8113      		cpse r24,r17
 267 00d6 00C0      		rjmp .L33
  51:boot.c        ****                             (Buffer[1] == (uint8_t)PagNm)){
GAS LISTING /tmp/ccCN8hQb.s 			page 9


 268               		.loc 1 51 0 is_stmt 0 discriminator 1
 269 00d8 8A81      		ldd r24,Y+2
 270 00da 8013      		cpse r24,r16
 271 00dc 00C0      		rjmp .L33
  53:boot.c        ****                         if((Buffer[BUFFSIZE-2] != (crc>>8) || \
 272               		.loc 1 53 0 is_stmt 1
 273 00de 9701      		movw r18,r14
 274 00e0 42E8      		ldi r20,lo8(-126)
 275 00e2 50E0      		ldi r21,0
 276 00e4 6CEB      		ldi r22,lo8(-68)
 277 00e6 76EA      		ldi r23,lo8(-90)
 278 00e8 8FEF      		ldi r24,lo8(-1)
 279 00ea 9FEF      		ldi r25,lo8(-1)
 280 00ec 0E94 0000 		call crc16_calc
 281               	.LVL16:
  54:boot.c        ****                                     (Buffer[BUFFSIZE-1] != (uint8_t)crc)))
 282               		.loc 1 54 0
 283 00f0 CD57      		subi r28,lo8(-131)
 284 00f2 DF4F      		sbci r29,hi8(-131)
 285 00f4 2881      		ld r18,Y
 286 00f6 C358      		subi r28,lo8(131)
 287 00f8 D040      		sbci r29,hi8(131)
 288 00fa 30E0      		ldi r19,0
 289 00fc 892E      		mov r8,r25
 290 00fe 912C      		mov r9,__zero_reg__
 291 0100 2815      		cp r18,r8
 292 0102 3905      		cpc r19,r9
 293 0104 01F0      		breq .+2
 294 0106 00C0      		rjmp .L33
  54:boot.c        ****                                     (Buffer[BUFFSIZE-1] != (uint8_t)crc)))
 295               		.loc 1 54 0 is_stmt 0 discriminator 1
 296 0108 CC57      		subi r28,lo8(-132)
 297 010a DF4F      		sbci r29,hi8(-132)
 298 010c 9881      		ld r25,Y
 299 010e C458      		subi r28,lo8(132)
 300 0110 D040      		sbci r29,hi8(132)
 301               	.LVL17:
 302 0112 9813      		cpse r25,r24
 303 0114 00C0      		rjmp .L33
  60:boot.c        ****                                 boot_page_erase(PagNm);
 304               		.loc 1 60 0 is_stmt 1
 305 0116 0115      		cp r16,__zero_reg__
 306 0118 FCE7      		ldi r31,124
 307 011a 1F07      		cpc r17,r31
 308 011c 00F0      		brlo .+2
 309 011e 00C0      		rjmp .L63
  61:boot.c        ****                                 boot_spm_busy_wait();
 310               		.loc 1 61 0
 311 0120 F801      		movw r30,r16
 312               	/* #APP */
 313               	 ;  61 "boot.c" 1
 314 0122 6092 5700 		sts 87, r6
 315 0126 E895      		spm
 316               		
 317               	 ;  0 "" 2
 318               	/* #NOAPP */
 319               	.L25:
GAS LISTING /tmp/ccCN8hQb.s 			page 10


  62:boot.c        ****                                 for(i=SPM_PAGESIZE;i>0;i-=2)
 320               		.loc 1 62 0 discriminator 1
 321 0128 07B6      		in __tmp_reg__,0x37
 322 012a 00FC      		sbrc __tmp_reg__,0
 323 012c 00C0      		rjmp .L25
 324 012e E0E0      		ldi r30,0
 325 0130 F0E0      		ldi r31,0
 326               	.LVL18:
 327               	.L26:
 328 0132 D701      		movw r26,r14
 329 0134 AE0F      		add r26,r30
 330 0136 BF1F      		adc r27,r31
  64:boot.c        ****                                             ((Buffer[SPM_PAGESIZE-i+3]<<8) | \
 331               		.loc 1 64 0 discriminator 3
 332 0138 1396      		adiw r26,3
 333 013a 8C91      		ld r24,X
 334 013c 1397      		sbiw r26,3
 335 013e 90E0      		ldi r25,0
 336 0140 982F      		mov r25,r24
 337 0142 8827      		clr r24
 338 0144 1296      		adiw r26,2
 339 0146 2C91      		ld r18,X
 340 0148 822B      		or r24,r18
 341               	/* #APP */
 342               	 ;  64 "boot.c" 1
 343 014a 0C01      		movw  r0, r24
 344 014c 5092 5700 		sts 87, r5
 345 0150 E895      		spm
 346 0152 1124      		clr  r1
 347               		
 348               	 ;  0 "" 2
 349               	.LVL19:
 350               	/* #NOAPP */
 351 0154 3296      		adiw r30,2
 352               	.LVL20:
  63:boot.c        ****                                     boot_page_fill((SPM_PAGESIZE-i), \
 353               		.loc 1 63 0 discriminator 3
 354 0156 E038      		cpi r30,-128
 355 0158 F105      		cpc r31,__zero_reg__
 356 015a 01F4      		brne .L26
 357               	.L27:
  67:boot.c        ****                                 boot_page_write(PagNm);
 358               		.loc 1 67 0 discriminator 1
 359 015c 07B6      		in __tmp_reg__,0x37
 360 015e 00FC      		sbrc __tmp_reg__,0
 361 0160 00C0      		rjmp .L27
  68:boot.c        ****                                 boot_spm_busy_wait();
 362               		.loc 1 68 0
 363 0162 F801      		movw r30,r16
 364               	.LVL21:
 365               	/* #APP */
 366               	 ;  68 "boot.c" 1
 367 0164 4092 5700 		sts 87, r4
 368 0168 E895      		spm
 369               		
 370               	 ;  0 "" 2
 371               	/* #NOAPP */
GAS LISTING /tmp/ccCN8hQb.s 			page 11


 372               	.L28:
  69:boot.c        ****                                 if(!Flash_Mod){
 373               		.loc 1 69 0 discriminator 1
 374 016a 07B6      		in __tmp_reg__,0x37
 375 016c 00FC      		sbrc __tmp_reg__,0
 376 016e 00C0      		rjmp .L28
  70:boot.c        ****                                     Flash_Mod = 0xFF;
 377               		.loc 1 70 0
 378 0170 C110      		cpse r12,__zero_reg__
 379 0172 00C0      		rjmp .L29
 380               	.LVL22:
  72:boot.c        ****                                     eeprom_busy_wait();
 381               		.loc 1 72 0
 382 0174 6FEF      		ldi r22,lo8(-1)
 383 0176 8FEF      		ldi r24,lo8(-1)
 384 0178 93E0      		ldi r25,lo8(3)
 385 017a 0E94 0000 		call __eeupd_byte_m328p
 386               	.LVL23:
 387               	.L30:
  73:boot.c        ****                                 }
 388               		.loc 1 73 0 discriminator 1
 389 017e F999      		sbic 0x1f,1
 390 0180 00C0      		rjmp .L30
  71:boot.c        ****                                     eeprom_update_byte(PFLAGADD, PRGERR);
 391               		.loc 1 71 0
 392 0182 CC24      		clr r12
 393 0184 CA94      		dec r12
 394               	.LVL24:
 395               	.L29:
  75:boot.c        ****                             }
 396               		.loc 1 75 0
 397 0186 0058      		subi r16,-128
 398 0188 1F4F      		sbci r17,-1
 399               	.LVL25:
 400 018a 00C0      		rjmp .L63
 401               	.LVL26:
 402               	.L19:
  83:boot.c        ****                     Buffer[0] = uart_rx();
 403               		.loc 1 83 0
 404 018c 8231      		cpi r24,lo8(18)
 405 018e 01F4      		brne .L31
  84:boot.c        ****                     Buffer[1] = uart_rx();
 406               		.loc 1 84 0
 407 0190 0E94 0000 		call uart_rx
 408               	.LVL27:
 409 0194 8983      		std Y+1,r24
  85:boot.c        ****                     Buffer[2] = uart_rx();
 410               		.loc 1 85 0
 411 0196 0E94 0000 		call uart_rx
 412               	.LVL28:
 413 019a 8A83      		std Y+2,r24
  86:boot.c        ****                     Buffer[3] = uart_rx();
 414               		.loc 1 86 0
 415 019c 0E94 0000 		call uart_rx
 416               	.LVL29:
 417 01a0 8B83      		std Y+3,r24
  87:boot.c        ****                     /*Check if the CRC receive has errors*/
GAS LISTING /tmp/ccCN8hQb.s 			page 12


 418               		.loc 1 87 0
 419 01a2 0E94 0000 		call uart_rx
 420               	.LVL30:
 421 01a6 8C83      		std Y+4,r24
  89:boot.c        ****                            ((Buffer[1] ^ Buffer[3]) == 0xFF)){
 422               		.loc 1 89 0
 423 01a8 2981      		ldd r18,Y+1
 424 01aa 9B81      		ldd r25,Y+3
 425 01ac 9227      		eor r25,r18
 426 01ae 9F3F      		cpi r25,lo8(-1)
 427 01b0 01F4      		brne .L33
  90:boot.c        ****                         crcflash = ((((uint16_t)Buffer[0]) << 8) | Buffer[1]);
 428               		.loc 1 90 0 discriminator 1
 429 01b2 9A81      		ldd r25,Y+2
 430 01b4 8927      		eor r24,r25
  89:boot.c        ****                            ((Buffer[1] ^ Buffer[3]) == 0xFF)){
 431               		.loc 1 89 0 discriminator 1
 432 01b6 8F3F      		cpi r24,lo8(-1)
 433 01b8 01F4      		brne .L33
  91:boot.c        ****                         uart_tx(ACK);
 434               		.loc 1 91 0
 435 01ba A92E      		mov r10,r25
 436               	.LVL31:
 437 01bc B12C      		mov r11,__zero_reg__
 438 01be B22A      		or r11,r18
 439               	.LVL32:
 440 01c0 00C0      		rjmp .L63
 441               	.L31:
  97:boot.c        ****                     TIMER_RST();
 442               		.loc 1 97 0
 443 01c2 8430      		cpi r24,lo8(4)
 444 01c4 01F4      		brne .L33
  98:boot.c        ****                     TIMER_ON(); // waits 1 sec for confirmation of EOT
 445               		.loc 1 98 0
 446 01c6 16BC      		out 0x26,__zero_reg__
  99:boot.c        ****                     uart_tx(ACK);
 447               		.loc 1 99 0
 448 01c8 85B5      		in r24,0x25
 449 01ca 8560      		ori r24,lo8(5)
 450 01cc 85BD      		out 0x25,r24
 451               	.L63:
 100:boot.c        ****                 }
 452               		.loc 1 100 0
 453 01ce 86E0      		ldi r24,lo8(6)
 454 01d0 00C0      		rjmp .L62
 455               	.L33:
 103:boot.c        ****             }
 456               		.loc 1 103 0
 457 01d2 85E1      		ldi r24,lo8(21)
 458               	.L62:
 459 01d4 0E94 0000 		call uart_tx
 460               	.LVL33:
 461               	.L18:
 106:boot.c        ****                 TFLAGRST();
 462               		.loc 1 106 0
 463 01d8 A89B      		sbis 0x15,0
 464 01da 00C0      		rjmp .L34
GAS LISTING /tmp/ccCN8hQb.s 			page 13


 107:boot.c        ****                 Tcounter--;
 465               		.loc 1 107 0
 466 01dc A89A      		sbi 0x15,0
 108:boot.c        ****             }
 467               		.loc 1 108 0
 468 01de DA94      		dec r13
 469               	.LVL34:
 470               	.L34:
  43:boot.c        ****             if(DataOnRx()){
 471               		.loc 1 43 0
 472 01e0 D110      		cpse r13,__zero_reg__
 473 01e2 00C0      		rjmp .L16
 474 01e4 7801      		movw r14,r16
 111:boot.c        ****         TIMER_RST();
 475               		.loc 1 111 0
 476 01e6 85B5      		in r24,0x25
 477 01e8 8A7F      		andi r24,lo8(-6)
 478 01ea 85BD      		out 0x25,r24
 112:boot.c        ****         boot_rww_enable();
 479               		.loc 1 112 0
 480 01ec 16BC      		out 0x26,__zero_reg__
 113:boot.c        ****         boot_spm_busy_wait();
 481               		.loc 1 113 0
 482 01ee 81E1      		ldi r24,lo8(17)
 483               	/* #APP */
 484               	 ;  113 "boot.c" 1
 485 01f0 8093 5700 		sts 87, r24
 486 01f4 E895      		spm
 487               		
 488               	 ;  0 "" 2
 489               	/* #NOAPP */
 490               	.L35:
 114:boot.c        ****         crc = INITVAL;
 491               		.loc 1 114 0 discriminator 1
 492 01f6 07B6      		in __tmp_reg__,0x37
 493 01f8 00FC      		sbrc __tmp_reg__,0
 494 01fa 00C0      		rjmp .L35
 495 01fc 8FEF      		ldi r24,lo8(-1)
 496 01fe 9FEF      		ldi r25,lo8(-1)
 497 0200 9E01      		movw r18,r28
 498 0202 2F5F      		subi r18,-1
 499 0204 3F4F      		sbci r19,-1
 500 0206 6901      		movw r12,r18
 501               	.LVL35:
 502 0208 021B      		sub r16,r18
 503 020a 130B      		sbc r17,r19
 504 020c 20E8      		ldi r18,lo8(-128)
 505 020e 922E      		mov r9,r18
 506 0210 9C0C      		add r9,r12
 507               	.L36:
 508               	.LVL36:
 116:boot.c        ****             for(i=SPM_PAGESIZE;i>0;i--)
 509               		.loc 1 116 0 discriminator 1
 510 0212 E114      		cp r14,__zero_reg__
 511 0214 F104      		cpc r15,__zero_reg__
 512 0216 01F0      		breq .L38
 116:boot.c        ****             for(i=SPM_PAGESIZE;i>0;i--)
GAS LISTING /tmp/ccCN8hQb.s 			page 14


 513               		.loc 1 116 0 is_stmt 0
 514 0218 D601      		movw r26,r12
 515 021a 9801      		movw r18,r16
 516 021c 2E19      		sub r18,r14
 517 021e 3F09      		sbc r19,r15
 518               	.L37:
 519               	.LVL37:
 520 0220 FD01      		movw r30,r26
 521 0222 E20F      		add r30,r18
 522 0224 F31F      		adc r31,r19
 523               	.LBB2:
 118:boot.c        ****             crc = crc16_calc(crc, MASKFLASH, SPM_PAGESIZE, Buffer);
 524               		.loc 1 118 0 is_stmt 1 discriminator 3
 525               	/* #APP */
 526               	 ;  118 "boot.c" 1
 527 0226 E491      		lpm r30, Z
 528               		
 529               	 ;  0 "" 2
 530               	.LVL38:
 531               	/* #NOAPP */
 532               	.LBE2:
 533 0228 ED93      		st X+,r30
 117:boot.c        ****                 Buffer[SPM_PAGESIZE-i]=pgm_read_byte((PagNm-j) + (SPM_PAGESIZE-i));
 534               		.loc 1 117 0 discriminator 3
 535 022a 9A12      		cpse r9,r26
 536 022c 00C0      		rjmp .L37
 119:boot.c        ****         }
 537               		.loc 1 119 0 discriminator 2
 538 022e 9601      		movw r18,r12
 539 0230 40E8      		ldi r20,lo8(-128)
 540 0232 50E0      		ldi r21,0
 541 0234 65E4      		ldi r22,lo8(69)
 542 0236 77ED      		ldi r23,lo8(-41)
 543 0238 0E94 0000 		call crc16_calc
 544               	.LVL39:
 116:boot.c        ****             for(i=SPM_PAGESIZE;i>0;i--)
 545               		.loc 1 116 0 discriminator 2
 546 023c 30E8      		ldi r19,-128
 547 023e E31A      		sub r14,r19
 548 0240 F108      		sbc r15,__zero_reg__
 549               	.LVL40:
 550 0242 00C0      		rjmp .L36
 551               	.L38:
 122:boot.c        ****             eeprom_update_byte(PFLAGADD, PRGOK);
 552               		.loc 1 122 0
 553 0244 A816      		cp r10,r24
 554 0246 B906      		cpc r11,r25
 555 0248 01F0      		breq .+2
 556 024a 00C0      		rjmp .L39
 123:boot.c        ****             eeprom_busy_wait();
 557               		.loc 1 123 0
 558 024c 65E5      		ldi r22,lo8(85)
 559 024e 8FEF      		ldi r24,lo8(-1)
 560 0250 93E0      		ldi r25,lo8(3)
 561               	.LVL41:
 562 0252 0E94 0000 		call __eeupd_byte_m328p
 563               	.LVL42:
GAS LISTING /tmp/ccCN8hQb.s 			page 15


 564               	.L40:
 124:boot.c        ****         }
 565               		.loc 1 124 0 discriminator 1
 566 0256 F999      		sbic 0x1f,1
 567 0258 00C0      		rjmp .L40
 568 025a 00C0      		rjmp .L39
 569               	.LVL43:
 570               	.L17:
 130:boot.c        ****     UARTOFF();
 571               		.loc 1 130 0 discriminator 1
 572 025c 8091 C000 		lds r24,192
 573 0260 85FF      		sbrs r24,5
 574 0262 00C0      		rjmp .L17
 131:boot.c        ****     if(Buffer[0] == PRGOK)
 575               		.loc 1 131 0
 576 0264 8091 C100 		lds r24,193
 577 0268 877E      		andi r24,lo8(-25)
 578 026a 8093 C100 		sts 193,r24
 132:boot.c        ****         runapp();
 579               		.loc 1 132 0
 580 026e 8981      		ldd r24,Y+1
 581 0270 8535      		cpi r24,lo8(85)
 582 0272 01F4      		brne .L41
 133:boot.c        ****     for(;;){}
 583               		.loc 1 133 0
 584 0274 CB57      		subi r28,lo8(-133)
 585 0276 DF4F      		sbci r29,hi8(-133)
 586 0278 E881      		ld r30,Y
 587 027a F981      		ldd r31,Y+1
 588 027c C558      		subi r28,lo8(133)
 589 027e D040      		sbci r29,hi8(133)
 590 0280 0995      		icall
 591               	.LVL44:
 592               	.L41:
 593               	.L61:
 134:boot.c        **** }
 594               		.loc 1 134 0 discriminator 2
 595 0282 00C0      		rjmp .L61
 596               		.cfi_endproc
 597               	.LFE1:
 598               		.size	main, .-main
 599               	.global	BootloaderVersion
 600               		.section	.version,"a",@progbits
 601               		.type	BootloaderVersion, @object
 602               		.size	BootloaderVersion, 8
 603               	BootloaderVersion:
 604 0000 7630 2E31 		.string	"v0.1-a3"
 604      2D61 3300 
 605               		.text
 606               	.Letext0:
 607               		.file 2 "/usr/lib/gcc/avr/4.9.1/include/stdint-gcc.h"
 608               		.file 3 "boot.h"
 609               		.file 4 "/usr/avr/include/avr/eeprom.h"
 610               		.file 5 "crc16.h"
 611               		.section	.debug_info,"",@progbits
 612               	.Ldebug_info0:
 613 0000 9703 0000 		.long	0x397
GAS LISTING /tmp/ccCN8hQb.s 			page 16


 614 0004 0200      		.word	0x2
 615 0006 0000 0000 		.long	.Ldebug_abbrev0
 616 000a 04        		.byte	0x4
 617 000b 01        		.uleb128 0x1
 618 000c 0000 0000 		.long	.LASF23
 619 0010 01        		.byte	0x1
 620 0011 0000 0000 		.long	.LASF24
 621 0015 0000 0000 		.long	.LASF25
 622 0019 0000 0000 		.long	.Ldebug_ranges0+0
 623 001d 0000 0000 		.long	0
 624 0021 0000 0000 		.long	0
 625 0025 0000 0000 		.long	.Ldebug_line0
 626 0029 02        		.uleb128 0x2
 627 002a 01        		.byte	0x1
 628 002b 06        		.byte	0x6
 629 002c 0000 0000 		.long	.LASF0
 630 0030 03        		.uleb128 0x3
 631 0031 02        		.byte	0x2
 632 0032 05        		.byte	0x5
 633 0033 696E 7400 		.string	"int"
 634 0037 02        		.uleb128 0x2
 635 0038 04        		.byte	0x4
 636 0039 05        		.byte	0x5
 637 003a 0000 0000 		.long	.LASF1
 638 003e 02        		.uleb128 0x2
 639 003f 08        		.byte	0x8
 640 0040 05        		.byte	0x5
 641 0041 0000 0000 		.long	.LASF2
 642 0045 04        		.uleb128 0x4
 643 0046 0000 0000 		.long	.LASF4
 644 004a 02        		.byte	0x2
 645 004b 2E        		.byte	0x2e
 646 004c 5000 0000 		.long	0x50
 647 0050 02        		.uleb128 0x2
 648 0051 01        		.byte	0x1
 649 0052 08        		.byte	0x8
 650 0053 0000 0000 		.long	.LASF3
 651 0057 04        		.uleb128 0x4
 652 0058 0000 0000 		.long	.LASF5
 653 005c 02        		.byte	0x2
 654 005d 31        		.byte	0x31
 655 005e 6200 0000 		.long	0x62
 656 0062 02        		.uleb128 0x2
 657 0063 02        		.byte	0x2
 658 0064 07        		.byte	0x7
 659 0065 0000 0000 		.long	.LASF6
 660 0069 02        		.uleb128 0x2
 661 006a 04        		.byte	0x4
 662 006b 07        		.byte	0x7
 663 006c 0000 0000 		.long	.LASF7
 664 0070 02        		.uleb128 0x2
 665 0071 08        		.byte	0x8
 666 0072 07        		.byte	0x7
 667 0073 0000 0000 		.long	.LASF8
 668 0077 04        		.uleb128 0x4
 669 0078 0000 0000 		.long	.LASF9
 670 007c 03        		.byte	0x3
GAS LISTING /tmp/ccCN8hQb.s 			page 17


 671 007d 61        		.byte	0x61
 672 007e 8200 0000 		.long	0x82
 673 0082 05        		.uleb128 0x5
 674 0083 02        		.byte	0x2
 675 0084 8800 0000 		.long	0x88
 676 0088 06        		.uleb128 0x6
 677 0089 01        		.byte	0x1
 678 008a 07        		.uleb128 0x7
 679 008b 01        		.byte	0x1
 680 008c 0000 0000 		.long	.LASF26
 681 0090 01        		.byte	0x1
 682 0091 89        		.byte	0x89
 683 0092 01        		.byte	0x1
 684 0093 0000 0000 		.long	.LFB2
 685 0097 0000 0000 		.long	.LFE2
 686 009b 03        		.byte	0x3
 687 009c 92        		.byte	0x92
 688 009d 20        		.uleb128 0x20
 689 009e 02        		.sleb128 2
 690 009f 01        		.byte	0x1
 691 00a0 08        		.uleb128 0x8
 692 00a1 01        		.byte	0x1
 693 00a2 0000 0000 		.long	.LASF10
 694 00a6 01        		.byte	0x1
 695 00a7 93        		.byte	0x93
 696 00a8 01        		.byte	0x1
 697 00a9 0000 0000 		.long	.LFB3
 698 00ad 0000 0000 		.long	.LFE3
 699 00b1 03        		.byte	0x3
 700 00b2 92        		.byte	0x92
 701 00b3 20        		.uleb128 0x20
 702 00b4 02        		.sleb128 2
 703 00b5 01        		.byte	0x1
 704 00b6 C800 0000 		.long	0xc8
 705 00ba 09        		.uleb128 0x9
 706 00bb 0000 0000 		.long	.LASF27
 707 00bf 01        		.byte	0x1
 708 00c0 93        		.byte	0x93
 709 00c1 4500 0000 		.long	0x45
 710 00c5 01        		.byte	0x1
 711 00c6 68        		.byte	0x68
 712 00c7 00        		.byte	0
 713 00c8 0A        		.uleb128 0xa
 714 00c9 01        		.byte	0x1
 715 00ca 0000 0000 		.long	.LASF28
 716 00ce 01        		.byte	0x1
 717 00cf 98        		.byte	0x98
 718 00d0 01        		.byte	0x1
 719 00d1 4500 0000 		.long	0x45
 720 00d5 0000 0000 		.long	.LFB4
 721 00d9 0000 0000 		.long	.LFE4
 722 00dd 03        		.byte	0x3
 723 00de 92        		.byte	0x92
 724 00df 20        		.uleb128 0x20
 725 00e0 02        		.sleb128 2
 726 00e1 01        		.byte	0x1
 727 00e2 0B        		.uleb128 0xb
GAS LISTING /tmp/ccCN8hQb.s 			page 18


 728 00e3 01        		.byte	0x1
 729 00e4 0000 0000 		.long	.LASF11
 730 00e8 01        		.byte	0x1
 731 00e9 03        		.byte	0x3
 732 00ea 01        		.byte	0x1
 733 00eb 0000 0000 		.long	.LFB1
 734 00ef 0000 0000 		.long	.LFE1
 735 00f3 0000 0000 		.long	.LLST0
 736 00f7 01        		.byte	0x1
 737 00f8 F002 0000 		.long	0x2f0
 738 00fc 0C        		.uleb128 0xc
 739 00fd 0000 0000 		.long	.LASF12
 740 0101 01        		.byte	0x1
 741 0102 04        		.byte	0x4
 742 0103 F002 0000 		.long	0x2f0
 743 0107 02        		.byte	0x2
 744 0108 8C        		.byte	0x8c
 745 0109 01        		.sleb128 1
 746 010a 0D        		.uleb128 0xd
 747 010b 0000 0000 		.long	.LASF13
 748 010f 01        		.byte	0x1
 749 0110 05        		.byte	0x5
 750 0111 4500 0000 		.long	0x45
 751 0115 0000 0000 		.long	.LLST1
 752 0119 0D        		.uleb128 0xd
 753 011a 0000 0000 		.long	.LASF14
 754 011e 01        		.byte	0x1
 755 011f 06        		.byte	0x6
 756 0120 4500 0000 		.long	0x45
 757 0124 0000 0000 		.long	.LLST2
 758 0128 0D        		.uleb128 0xd
 759 0129 0000 0000 		.long	.LASF15
 760 012d 01        		.byte	0x1
 761 012e 07        		.byte	0x7
 762 012f 4500 0000 		.long	0x45
 763 0133 0000 0000 		.long	.LLST3
 764 0137 0E        		.uleb128 0xe
 765 0138 6372 6300 		.string	"crc"
 766 013c 01        		.byte	0x1
 767 013d 08        		.byte	0x8
 768 013e 5700 0000 		.long	0x57
 769 0142 0000 0000 		.long	.LLST4
 770 0146 0D        		.uleb128 0xd
 771 0147 0000 0000 		.long	.LASF16
 772 014b 01        		.byte	0x1
 773 014c 09        		.byte	0x9
 774 014d 5700 0000 		.long	0x57
 775 0151 0000 0000 		.long	.LLST5
 776 0155 0D        		.uleb128 0xd
 777 0156 0000 0000 		.long	.LASF17
 778 015a 01        		.byte	0x1
 779 015b 0A        		.byte	0xa
 780 015c 5700 0000 		.long	0x57
 781 0160 0000 0000 		.long	.LLST6
 782 0164 0E        		.uleb128 0xe
 783 0165 6A00      		.string	"j"
 784 0167 01        		.byte	0x1
GAS LISTING /tmp/ccCN8hQb.s 			page 19


 785 0168 0B        		.byte	0xb
 786 0169 5700 0000 		.long	0x57
 787 016d 0000 0000 		.long	.LLST7
 788 0171 0C        		.uleb128 0xc
 789 0172 0000 0000 		.long	.LASF18
 790 0176 01        		.byte	0x1
 791 0177 0C        		.byte	0xc
 792 0178 0703 0000 		.long	0x307
 793 017c 03        		.byte	0x3
 794 017d 8C        		.byte	0x8c
 795 017e 8501      		.sleb128 133
 796 0180 0E        		.uleb128 0xe
 797 0181 6900      		.string	"i"
 798 0183 01        		.byte	0x1
 799 0184 10        		.byte	0x10
 800 0185 4500 0000 		.long	0x45
 801 0189 0000 0000 		.long	.LLST8
 802 018d 0F        		.uleb128 0xf
 803 018e 0000 0000 		.long	.LBB2
 804 0192 0000 0000 		.long	.LBE2
 805 0196 B501 0000 		.long	0x1b5
 806 019a 10        		.uleb128 0x10
 807 019b 0000 0000 		.long	.LASF29
 808 019f 01        		.byte	0x1
 809 01a0 76        		.byte	0x76
 810 01a1 5700 0000 		.long	0x57
 811 01a5 0D        		.uleb128 0xd
 812 01a6 0000 0000 		.long	.LASF19
 813 01aa 01        		.byte	0x1
 814 01ab 76        		.byte	0x76
 815 01ac 4500 0000 		.long	0x45
 816 01b0 0000 0000 		.long	.LLST9
 817 01b4 00        		.byte	0
 818 01b5 11        		.uleb128 0x11
 819 01b6 0000 0000 		.long	.LVL2
 820 01ba A000 0000 		.long	0xa0
 821 01be C801 0000 		.long	0x1c8
 822 01c2 12        		.uleb128 0x12
 823 01c3 01        		.byte	0x1
 824 01c4 68        		.byte	0x68
 825 01c5 01        		.byte	0x1
 826 01c6 4E        		.byte	0x4e
 827 01c7 00        		.byte	0
 828 01c8 11        		.uleb128 0x11
 829 01c9 0000 0000 		.long	.LVL3
 830 01cd A000 0000 		.long	0xa0
 831 01d1 DC01 0000 		.long	0x1dc
 832 01d5 12        		.uleb128 0x12
 833 01d6 01        		.byte	0x1
 834 01d7 68        		.byte	0x68
 835 01d8 02        		.byte	0x2
 836 01d9 09        		.byte	0x9
 837 01da 95        		.byte	0x95
 838 01db 00        		.byte	0
 839 01dc 11        		.uleb128 0x11
 840 01dd 0000 0000 		.long	.LVL4
 841 01e1 A000 0000 		.long	0xa0
GAS LISTING /tmp/ccCN8hQb.s 			page 20


 842 01e5 EF01 0000 		.long	0x1ef
 843 01e9 12        		.uleb128 0x12
 844 01ea 01        		.byte	0x1
 845 01eb 68        		.byte	0x68
 846 01ec 01        		.byte	0x1
 847 01ed 3F        		.byte	0x3f
 848 01ee 00        		.byte	0
 849 01ef 11        		.uleb128 0x11
 850 01f0 0000 0000 		.long	.LVL10
 851 01f4 3303 0000 		.long	0x333
 852 01f8 0902 0000 		.long	0x209
 853 01fc 12        		.uleb128 0x12
 854 01fd 06        		.byte	0x6
 855 01fe 68        		.byte	0x68
 856 01ff 93        		.byte	0x93
 857 0200 01        		.uleb128 0x1
 858 0201 69        		.byte	0x69
 859 0202 93        		.byte	0x93
 860 0203 01        		.uleb128 0x1
 861 0204 03        		.byte	0x3
 862 0205 0A        		.byte	0xa
 863 0206 FF03      		.word	0x3ff
 864 0208 00        		.byte	0
 865 0209 13        		.uleb128 0x13
 866 020a 0000 0000 		.long	.LVL11
 867 020e A000 0000 		.long	0xa0
 868 0212 13        		.uleb128 0x13
 869 0213 0000 0000 		.long	.LVL14
 870 0217 C800 0000 		.long	0xc8
 871 021b 11        		.uleb128 0x11
 872 021c 0000 0000 		.long	.LVL16
 873 0220 5703 0000 		.long	0x357
 874 0224 5602 0000 		.long	0x256
 875 0228 12        		.uleb128 0x12
 876 0229 06        		.byte	0x6
 877 022a 68        		.byte	0x68
 878 022b 93        		.byte	0x93
 879 022c 01        		.uleb128 0x1
 880 022d 69        		.byte	0x69
 881 022e 93        		.byte	0x93
 882 022f 01        		.uleb128 0x1
 883 0230 02        		.byte	0x2
 884 0231 09        		.byte	0x9
 885 0232 FF        		.byte	0xff
 886 0233 12        		.uleb128 0x12
 887 0234 06        		.byte	0x6
 888 0235 66        		.byte	0x66
 889 0236 93        		.byte	0x93
 890 0237 01        		.uleb128 0x1
 891 0238 67        		.byte	0x67
 892 0239 93        		.byte	0x93
 893 023a 01        		.uleb128 0x1
 894 023b 03        		.byte	0x3
 895 023c 0B        		.byte	0xb
 896 023d BCA6      		.word	0xa6bc
 897 023f 12        		.uleb128 0x12
 898 0240 06        		.byte	0x6
GAS LISTING /tmp/ccCN8hQb.s 			page 21


 899 0241 64        		.byte	0x64
 900 0242 93        		.byte	0x93
 901 0243 01        		.uleb128 0x1
 902 0244 65        		.byte	0x65
 903 0245 93        		.byte	0x93
 904 0246 01        		.uleb128 0x1
 905 0247 02        		.byte	0x2
 906 0248 08        		.byte	0x8
 907 0249 82        		.byte	0x82
 908 024a 12        		.uleb128 0x12
 909 024b 06        		.byte	0x6
 910 024c 62        		.byte	0x62
 911 024d 93        		.byte	0x93
 912 024e 01        		.uleb128 0x1
 913 024f 63        		.byte	0x63
 914 0250 93        		.byte	0x93
 915 0251 01        		.uleb128 0x1
 916 0252 02        		.byte	0x2
 917 0253 7E        		.byte	0x7e
 918 0254 00        		.sleb128 0
 919 0255 00        		.byte	0
 920 0256 11        		.uleb128 0x11
 921 0257 0000 0000 		.long	.LVL23
 922 025b 8403 0000 		.long	0x384
 923 025f 7602 0000 		.long	0x276
 924 0263 12        		.uleb128 0x12
 925 0264 06        		.byte	0x6
 926 0265 68        		.byte	0x68
 927 0266 93        		.byte	0x93
 928 0267 01        		.uleb128 0x1
 929 0268 69        		.byte	0x69
 930 0269 93        		.byte	0x93
 931 026a 01        		.uleb128 0x1
 932 026b 03        		.byte	0x3
 933 026c 0A        		.byte	0xa
 934 026d FF03      		.word	0x3ff
 935 026f 12        		.uleb128 0x12
 936 0270 01        		.byte	0x1
 937 0271 66        		.byte	0x66
 938 0272 02        		.byte	0x2
 939 0273 09        		.byte	0x9
 940 0274 FF        		.byte	0xff
 941 0275 00        		.byte	0
 942 0276 13        		.uleb128 0x13
 943 0277 0000 0000 		.long	.LVL27
 944 027b C800 0000 		.long	0xc8
 945 027f 13        		.uleb128 0x13
 946 0280 0000 0000 		.long	.LVL28
 947 0284 C800 0000 		.long	0xc8
 948 0288 13        		.uleb128 0x13
 949 0289 0000 0000 		.long	.LVL29
 950 028d C800 0000 		.long	0xc8
 951 0291 13        		.uleb128 0x13
 952 0292 0000 0000 		.long	.LVL30
 953 0296 C800 0000 		.long	0xc8
 954 029a 13        		.uleb128 0x13
 955 029b 0000 0000 		.long	.LVL33
GAS LISTING /tmp/ccCN8hQb.s 			page 22


 956 029f A000 0000 		.long	0xa0
 957 02a3 11        		.uleb128 0x11
 958 02a4 0000 0000 		.long	.LVL39
 959 02a8 5703 0000 		.long	0x357
 960 02ac D302 0000 		.long	0x2d3
 961 02b0 12        		.uleb128 0x12
 962 02b1 06        		.byte	0x6
 963 02b2 66        		.byte	0x66
 964 02b3 93        		.byte	0x93
 965 02b4 01        		.uleb128 0x1
 966 02b5 67        		.byte	0x67
 967 02b6 93        		.byte	0x93
 968 02b7 01        		.uleb128 0x1
 969 02b8 03        		.byte	0x3
 970 02b9 0B        		.byte	0xb
 971 02ba 45D7      		.word	0xd745
 972 02bc 12        		.uleb128 0x12
 973 02bd 06        		.byte	0x6
 974 02be 64        		.byte	0x64
 975 02bf 93        		.byte	0x93
 976 02c0 01        		.uleb128 0x1
 977 02c1 65        		.byte	0x65
 978 02c2 93        		.byte	0x93
 979 02c3 01        		.uleb128 0x1
 980 02c4 02        		.byte	0x2
 981 02c5 08        		.byte	0x8
 982 02c6 80        		.byte	0x80
 983 02c7 12        		.uleb128 0x12
 984 02c8 06        		.byte	0x6
 985 02c9 62        		.byte	0x62
 986 02ca 93        		.byte	0x93
 987 02cb 01        		.uleb128 0x1
 988 02cc 63        		.byte	0x63
 989 02cd 93        		.byte	0x93
 990 02ce 01        		.uleb128 0x1
 991 02cf 02        		.byte	0x2
 992 02d0 7C        		.byte	0x7c
 993 02d1 00        		.sleb128 0
 994 02d2 00        		.byte	0
 995 02d3 14        		.uleb128 0x14
 996 02d4 0000 0000 		.long	.LVL42
 997 02d8 8403 0000 		.long	0x384
 998 02dc 12        		.uleb128 0x12
 999 02dd 06        		.byte	0x6
 1000 02de 68        		.byte	0x68
 1001 02df 93        		.byte	0x93
 1002 02e0 01        		.uleb128 0x1
 1003 02e1 69        		.byte	0x69
 1004 02e2 93        		.byte	0x93
 1005 02e3 01        		.uleb128 0x1
 1006 02e4 03        		.byte	0x3
 1007 02e5 0A        		.byte	0xa
 1008 02e6 FF03      		.word	0x3ff
 1009 02e8 12        		.uleb128 0x12
 1010 02e9 01        		.byte	0x1
 1011 02ea 66        		.byte	0x66
 1012 02eb 02        		.byte	0x2
GAS LISTING /tmp/ccCN8hQb.s 			page 23


 1013 02ec 08        		.byte	0x8
 1014 02ed 55        		.byte	0x55
 1015 02ee 00        		.byte	0
 1016 02ef 00        		.byte	0
 1017 02f0 15        		.uleb128 0x15
 1018 02f1 4500 0000 		.long	0x45
 1019 02f5 0003 0000 		.long	0x300
 1020 02f9 16        		.uleb128 0x16
 1021 02fa 0003 0000 		.long	0x300
 1022 02fe 83        		.byte	0x83
 1023 02ff 00        		.byte	0
 1024 0300 02        		.uleb128 0x2
 1025 0301 02        		.byte	0x2
 1026 0302 07        		.byte	0x7
 1027 0303 0000 0000 		.long	.LASF20
 1028 0307 17        		.uleb128 0x17
 1029 0308 7700 0000 		.long	0x77
 1030 030c 15        		.uleb128 0x15
 1031 030d 4500 0000 		.long	0x45
 1032 0311 1C03 0000 		.long	0x31c
 1033 0315 16        		.uleb128 0x16
 1034 0316 0003 0000 		.long	0x300
 1035 031a 07        		.byte	0x7
 1036 031b 00        		.byte	0
 1037 031c 18        		.uleb128 0x18
 1038 031d 0000 0000 		.long	.LASF30
 1039 0321 03        		.byte	0x3
 1040 0322 65        		.byte	0x65
 1041 0323 2E03 0000 		.long	0x32e
 1042 0327 01        		.byte	0x1
 1043 0328 05        		.byte	0x5
 1044 0329 03        		.byte	0x3
 1045 032a 0000 0000 		.long	BootloaderVersion
 1046 032e 19        		.uleb128 0x19
 1047 032f 0C03 0000 		.long	0x30c
 1048 0333 1A        		.uleb128 0x1a
 1049 0334 01        		.byte	0x1
 1050 0335 0000 0000 		.long	.LASF21
 1051 0339 04        		.byte	0x4
 1052 033a 6702      		.word	0x267
 1053 033c 01        		.byte	0x1
 1054 033d 4500 0000 		.long	0x45
 1055 0341 01        		.byte	0x1
 1056 0342 4C03 0000 		.long	0x34c
 1057 0346 1B        		.uleb128 0x1b
 1058 0347 4C03 0000 		.long	0x34c
 1059 034b 00        		.byte	0
 1060 034c 05        		.uleb128 0x5
 1061 034d 02        		.byte	0x2
 1062 034e 5203 0000 		.long	0x352
 1063 0352 19        		.uleb128 0x19
 1064 0353 4500 0000 		.long	0x45
 1065 0357 1C        		.uleb128 0x1c
 1066 0358 01        		.byte	0x1
 1067 0359 0000 0000 		.long	.LASF22
 1068 035d 05        		.byte	0x5
 1069 035e 06        		.byte	0x6
GAS LISTING /tmp/ccCN8hQb.s 			page 24


 1070 035f 01        		.byte	0x1
 1071 0360 5700 0000 		.long	0x57
 1072 0364 01        		.byte	0x1
 1073 0365 7E03 0000 		.long	0x37e
 1074 0369 1B        		.uleb128 0x1b
 1075 036a 5700 0000 		.long	0x57
 1076 036e 1B        		.uleb128 0x1b
 1077 036f 5700 0000 		.long	0x57
 1078 0373 1B        		.uleb128 0x1b
 1079 0374 5700 0000 		.long	0x57
 1080 0378 1B        		.uleb128 0x1b
 1081 0379 7E03 0000 		.long	0x37e
 1082 037d 00        		.byte	0
 1083 037e 05        		.uleb128 0x5
 1084 037f 02        		.byte	0x2
 1085 0380 4500 0000 		.long	0x45
 1086 0384 1D        		.uleb128 0x1d
 1087 0385 01        		.byte	0x1
 1088 0386 0000 0000 		.long	.LASF31
 1089 038a 04        		.byte	0x4
 1090 038b 9D02      		.word	0x29d
 1091 038d 01        		.byte	0x1
 1092 038e 01        		.byte	0x1
 1093 038f 1B        		.uleb128 0x1b
 1094 0390 7E03 0000 		.long	0x37e
 1095 0394 1B        		.uleb128 0x1b
 1096 0395 4500 0000 		.long	0x45
 1097 0399 00        		.byte	0
 1098 039a 00        		.byte	0
 1099               		.section	.debug_abbrev,"",@progbits
 1100               	.Ldebug_abbrev0:
 1101 0000 01        		.uleb128 0x1
 1102 0001 11        		.uleb128 0x11
 1103 0002 01        		.byte	0x1
 1104 0003 25        		.uleb128 0x25
 1105 0004 0E        		.uleb128 0xe
 1106 0005 13        		.uleb128 0x13
 1107 0006 0B        		.uleb128 0xb
 1108 0007 03        		.uleb128 0x3
 1109 0008 0E        		.uleb128 0xe
 1110 0009 1B        		.uleb128 0x1b
 1111 000a 0E        		.uleb128 0xe
 1112 000b 55        		.uleb128 0x55
 1113 000c 06        		.uleb128 0x6
 1114 000d 11        		.uleb128 0x11
 1115 000e 01        		.uleb128 0x1
 1116 000f 52        		.uleb128 0x52
 1117 0010 01        		.uleb128 0x1
 1118 0011 10        		.uleb128 0x10
 1119 0012 06        		.uleb128 0x6
 1120 0013 00        		.byte	0
 1121 0014 00        		.byte	0
 1122 0015 02        		.uleb128 0x2
 1123 0016 24        		.uleb128 0x24
 1124 0017 00        		.byte	0
 1125 0018 0B        		.uleb128 0xb
 1126 0019 0B        		.uleb128 0xb
GAS LISTING /tmp/ccCN8hQb.s 			page 25


 1127 001a 3E        		.uleb128 0x3e
 1128 001b 0B        		.uleb128 0xb
 1129 001c 03        		.uleb128 0x3
 1130 001d 0E        		.uleb128 0xe
 1131 001e 00        		.byte	0
 1132 001f 00        		.byte	0
 1133 0020 03        		.uleb128 0x3
 1134 0021 24        		.uleb128 0x24
 1135 0022 00        		.byte	0
 1136 0023 0B        		.uleb128 0xb
 1137 0024 0B        		.uleb128 0xb
 1138 0025 3E        		.uleb128 0x3e
 1139 0026 0B        		.uleb128 0xb
 1140 0027 03        		.uleb128 0x3
 1141 0028 08        		.uleb128 0x8
 1142 0029 00        		.byte	0
 1143 002a 00        		.byte	0
 1144 002b 04        		.uleb128 0x4
 1145 002c 16        		.uleb128 0x16
 1146 002d 00        		.byte	0
 1147 002e 03        		.uleb128 0x3
 1148 002f 0E        		.uleb128 0xe
 1149 0030 3A        		.uleb128 0x3a
 1150 0031 0B        		.uleb128 0xb
 1151 0032 3B        		.uleb128 0x3b
 1152 0033 0B        		.uleb128 0xb
 1153 0034 49        		.uleb128 0x49
 1154 0035 13        		.uleb128 0x13
 1155 0036 00        		.byte	0
 1156 0037 00        		.byte	0
 1157 0038 05        		.uleb128 0x5
 1158 0039 0F        		.uleb128 0xf
 1159 003a 00        		.byte	0
 1160 003b 0B        		.uleb128 0xb
 1161 003c 0B        		.uleb128 0xb
 1162 003d 49        		.uleb128 0x49
 1163 003e 13        		.uleb128 0x13
 1164 003f 00        		.byte	0
 1165 0040 00        		.byte	0
 1166 0041 06        		.uleb128 0x6
 1167 0042 15        		.uleb128 0x15
 1168 0043 00        		.byte	0
 1169 0044 27        		.uleb128 0x27
 1170 0045 0C        		.uleb128 0xc
 1171 0046 00        		.byte	0
 1172 0047 00        		.byte	0
 1173 0048 07        		.uleb128 0x7
 1174 0049 2E        		.uleb128 0x2e
 1175 004a 00        		.byte	0
 1176 004b 3F        		.uleb128 0x3f
 1177 004c 0C        		.uleb128 0xc
 1178 004d 03        		.uleb128 0x3
 1179 004e 0E        		.uleb128 0xe
 1180 004f 3A        		.uleb128 0x3a
 1181 0050 0B        		.uleb128 0xb
 1182 0051 3B        		.uleb128 0x3b
 1183 0052 0B        		.uleb128 0xb
GAS LISTING /tmp/ccCN8hQb.s 			page 26


 1184 0053 27        		.uleb128 0x27
 1185 0054 0C        		.uleb128 0xc
 1186 0055 11        		.uleb128 0x11
 1187 0056 01        		.uleb128 0x1
 1188 0057 12        		.uleb128 0x12
 1189 0058 01        		.uleb128 0x1
 1190 0059 40        		.uleb128 0x40
 1191 005a 0A        		.uleb128 0xa
 1192 005b 9742      		.uleb128 0x2117
 1193 005d 0C        		.uleb128 0xc
 1194 005e 00        		.byte	0
 1195 005f 00        		.byte	0
 1196 0060 08        		.uleb128 0x8
 1197 0061 2E        		.uleb128 0x2e
 1198 0062 01        		.byte	0x1
 1199 0063 3F        		.uleb128 0x3f
 1200 0064 0C        		.uleb128 0xc
 1201 0065 03        		.uleb128 0x3
 1202 0066 0E        		.uleb128 0xe
 1203 0067 3A        		.uleb128 0x3a
 1204 0068 0B        		.uleb128 0xb
 1205 0069 3B        		.uleb128 0x3b
 1206 006a 0B        		.uleb128 0xb
 1207 006b 27        		.uleb128 0x27
 1208 006c 0C        		.uleb128 0xc
 1209 006d 11        		.uleb128 0x11
 1210 006e 01        		.uleb128 0x1
 1211 006f 12        		.uleb128 0x12
 1212 0070 01        		.uleb128 0x1
 1213 0071 40        		.uleb128 0x40
 1214 0072 0A        		.uleb128 0xa
 1215 0073 9742      		.uleb128 0x2117
 1216 0075 0C        		.uleb128 0xc
 1217 0076 01        		.uleb128 0x1
 1218 0077 13        		.uleb128 0x13
 1219 0078 00        		.byte	0
 1220 0079 00        		.byte	0
 1221 007a 09        		.uleb128 0x9
 1222 007b 05        		.uleb128 0x5
 1223 007c 00        		.byte	0
 1224 007d 03        		.uleb128 0x3
 1225 007e 0E        		.uleb128 0xe
 1226 007f 3A        		.uleb128 0x3a
 1227 0080 0B        		.uleb128 0xb
 1228 0081 3B        		.uleb128 0x3b
 1229 0082 0B        		.uleb128 0xb
 1230 0083 49        		.uleb128 0x49
 1231 0084 13        		.uleb128 0x13
 1232 0085 02        		.uleb128 0x2
 1233 0086 0A        		.uleb128 0xa
 1234 0087 00        		.byte	0
 1235 0088 00        		.byte	0
 1236 0089 0A        		.uleb128 0xa
 1237 008a 2E        		.uleb128 0x2e
 1238 008b 00        		.byte	0
 1239 008c 3F        		.uleb128 0x3f
 1240 008d 0C        		.uleb128 0xc
GAS LISTING /tmp/ccCN8hQb.s 			page 27


 1241 008e 03        		.uleb128 0x3
 1242 008f 0E        		.uleb128 0xe
 1243 0090 3A        		.uleb128 0x3a
 1244 0091 0B        		.uleb128 0xb
 1245 0092 3B        		.uleb128 0x3b
 1246 0093 0B        		.uleb128 0xb
 1247 0094 27        		.uleb128 0x27
 1248 0095 0C        		.uleb128 0xc
 1249 0096 49        		.uleb128 0x49
 1250 0097 13        		.uleb128 0x13
 1251 0098 11        		.uleb128 0x11
 1252 0099 01        		.uleb128 0x1
 1253 009a 12        		.uleb128 0x12
 1254 009b 01        		.uleb128 0x1
 1255 009c 40        		.uleb128 0x40
 1256 009d 0A        		.uleb128 0xa
 1257 009e 9742      		.uleb128 0x2117
 1258 00a0 0C        		.uleb128 0xc
 1259 00a1 00        		.byte	0
 1260 00a2 00        		.byte	0
 1261 00a3 0B        		.uleb128 0xb
 1262 00a4 2E        		.uleb128 0x2e
 1263 00a5 01        		.byte	0x1
 1264 00a6 3F        		.uleb128 0x3f
 1265 00a7 0C        		.uleb128 0xc
 1266 00a8 03        		.uleb128 0x3
 1267 00a9 0E        		.uleb128 0xe
 1268 00aa 3A        		.uleb128 0x3a
 1269 00ab 0B        		.uleb128 0xb
 1270 00ac 3B        		.uleb128 0x3b
 1271 00ad 0B        		.uleb128 0xb
 1272 00ae 27        		.uleb128 0x27
 1273 00af 0C        		.uleb128 0xc
 1274 00b0 11        		.uleb128 0x11
 1275 00b1 01        		.uleb128 0x1
 1276 00b2 12        		.uleb128 0x12
 1277 00b3 01        		.uleb128 0x1
 1278 00b4 40        		.uleb128 0x40
 1279 00b5 06        		.uleb128 0x6
 1280 00b6 9642      		.uleb128 0x2116
 1281 00b8 0C        		.uleb128 0xc
 1282 00b9 01        		.uleb128 0x1
 1283 00ba 13        		.uleb128 0x13
 1284 00bb 00        		.byte	0
 1285 00bc 00        		.byte	0
 1286 00bd 0C        		.uleb128 0xc
 1287 00be 34        		.uleb128 0x34
 1288 00bf 00        		.byte	0
 1289 00c0 03        		.uleb128 0x3
 1290 00c1 0E        		.uleb128 0xe
 1291 00c2 3A        		.uleb128 0x3a
 1292 00c3 0B        		.uleb128 0xb
 1293 00c4 3B        		.uleb128 0x3b
 1294 00c5 0B        		.uleb128 0xb
 1295 00c6 49        		.uleb128 0x49
 1296 00c7 13        		.uleb128 0x13
 1297 00c8 02        		.uleb128 0x2
GAS LISTING /tmp/ccCN8hQb.s 			page 28


 1298 00c9 0A        		.uleb128 0xa
 1299 00ca 00        		.byte	0
 1300 00cb 00        		.byte	0
 1301 00cc 0D        		.uleb128 0xd
 1302 00cd 34        		.uleb128 0x34
 1303 00ce 00        		.byte	0
 1304 00cf 03        		.uleb128 0x3
 1305 00d0 0E        		.uleb128 0xe
 1306 00d1 3A        		.uleb128 0x3a
 1307 00d2 0B        		.uleb128 0xb
 1308 00d3 3B        		.uleb128 0x3b
 1309 00d4 0B        		.uleb128 0xb
 1310 00d5 49        		.uleb128 0x49
 1311 00d6 13        		.uleb128 0x13
 1312 00d7 02        		.uleb128 0x2
 1313 00d8 06        		.uleb128 0x6
 1314 00d9 00        		.byte	0
 1315 00da 00        		.byte	0
 1316 00db 0E        		.uleb128 0xe
 1317 00dc 34        		.uleb128 0x34
 1318 00dd 00        		.byte	0
 1319 00de 03        		.uleb128 0x3
 1320 00df 08        		.uleb128 0x8
 1321 00e0 3A        		.uleb128 0x3a
 1322 00e1 0B        		.uleb128 0xb
 1323 00e2 3B        		.uleb128 0x3b
 1324 00e3 0B        		.uleb128 0xb
 1325 00e4 49        		.uleb128 0x49
 1326 00e5 13        		.uleb128 0x13
 1327 00e6 02        		.uleb128 0x2
 1328 00e7 06        		.uleb128 0x6
 1329 00e8 00        		.byte	0
 1330 00e9 00        		.byte	0
 1331 00ea 0F        		.uleb128 0xf
 1332 00eb 0B        		.uleb128 0xb
 1333 00ec 01        		.byte	0x1
 1334 00ed 11        		.uleb128 0x11
 1335 00ee 01        		.uleb128 0x1
 1336 00ef 12        		.uleb128 0x12
 1337 00f0 01        		.uleb128 0x1
 1338 00f1 01        		.uleb128 0x1
 1339 00f2 13        		.uleb128 0x13
 1340 00f3 00        		.byte	0
 1341 00f4 00        		.byte	0
 1342 00f5 10        		.uleb128 0x10
 1343 00f6 34        		.uleb128 0x34
 1344 00f7 00        		.byte	0
 1345 00f8 03        		.uleb128 0x3
 1346 00f9 0E        		.uleb128 0xe
 1347 00fa 3A        		.uleb128 0x3a
 1348 00fb 0B        		.uleb128 0xb
 1349 00fc 3B        		.uleb128 0x3b
 1350 00fd 0B        		.uleb128 0xb
 1351 00fe 49        		.uleb128 0x49
 1352 00ff 13        		.uleb128 0x13
 1353 0100 00        		.byte	0
 1354 0101 00        		.byte	0
GAS LISTING /tmp/ccCN8hQb.s 			page 29


 1355 0102 11        		.uleb128 0x11
 1356 0103 8982 01   		.uleb128 0x4109
 1357 0106 01        		.byte	0x1
 1358 0107 11        		.uleb128 0x11
 1359 0108 01        		.uleb128 0x1
 1360 0109 31        		.uleb128 0x31
 1361 010a 13        		.uleb128 0x13
 1362 010b 01        		.uleb128 0x1
 1363 010c 13        		.uleb128 0x13
 1364 010d 00        		.byte	0
 1365 010e 00        		.byte	0
 1366 010f 12        		.uleb128 0x12
 1367 0110 8A82 01   		.uleb128 0x410a
 1368 0113 00        		.byte	0
 1369 0114 02        		.uleb128 0x2
 1370 0115 0A        		.uleb128 0xa
 1371 0116 9142      		.uleb128 0x2111
 1372 0118 0A        		.uleb128 0xa
 1373 0119 00        		.byte	0
 1374 011a 00        		.byte	0
 1375 011b 13        		.uleb128 0x13
 1376 011c 8982 01   		.uleb128 0x4109
 1377 011f 00        		.byte	0
 1378 0120 11        		.uleb128 0x11
 1379 0121 01        		.uleb128 0x1
 1380 0122 31        		.uleb128 0x31
 1381 0123 13        		.uleb128 0x13
 1382 0124 00        		.byte	0
 1383 0125 00        		.byte	0
 1384 0126 14        		.uleb128 0x14
 1385 0127 8982 01   		.uleb128 0x4109
 1386 012a 01        		.byte	0x1
 1387 012b 11        		.uleb128 0x11
 1388 012c 01        		.uleb128 0x1
 1389 012d 31        		.uleb128 0x31
 1390 012e 13        		.uleb128 0x13
 1391 012f 00        		.byte	0
 1392 0130 00        		.byte	0
 1393 0131 15        		.uleb128 0x15
 1394 0132 01        		.uleb128 0x1
 1395 0133 01        		.byte	0x1
 1396 0134 49        		.uleb128 0x49
 1397 0135 13        		.uleb128 0x13
 1398 0136 01        		.uleb128 0x1
 1399 0137 13        		.uleb128 0x13
 1400 0138 00        		.byte	0
 1401 0139 00        		.byte	0
 1402 013a 16        		.uleb128 0x16
 1403 013b 21        		.uleb128 0x21
 1404 013c 00        		.byte	0
 1405 013d 49        		.uleb128 0x49
 1406 013e 13        		.uleb128 0x13
 1407 013f 2F        		.uleb128 0x2f
 1408 0140 0B        		.uleb128 0xb
 1409 0141 00        		.byte	0
 1410 0142 00        		.byte	0
 1411 0143 17        		.uleb128 0x17
GAS LISTING /tmp/ccCN8hQb.s 			page 30


 1412 0144 35        		.uleb128 0x35
 1413 0145 00        		.byte	0
 1414 0146 49        		.uleb128 0x49
 1415 0147 13        		.uleb128 0x13
 1416 0148 00        		.byte	0
 1417 0149 00        		.byte	0
 1418 014a 18        		.uleb128 0x18
 1419 014b 34        		.uleb128 0x34
 1420 014c 00        		.byte	0
 1421 014d 03        		.uleb128 0x3
 1422 014e 0E        		.uleb128 0xe
 1423 014f 3A        		.uleb128 0x3a
 1424 0150 0B        		.uleb128 0xb
 1425 0151 3B        		.uleb128 0x3b
 1426 0152 0B        		.uleb128 0xb
 1427 0153 49        		.uleb128 0x49
 1428 0154 13        		.uleb128 0x13
 1429 0155 3F        		.uleb128 0x3f
 1430 0156 0C        		.uleb128 0xc
 1431 0157 02        		.uleb128 0x2
 1432 0158 0A        		.uleb128 0xa
 1433 0159 00        		.byte	0
 1434 015a 00        		.byte	0
 1435 015b 19        		.uleb128 0x19
 1436 015c 26        		.uleb128 0x26
 1437 015d 00        		.byte	0
 1438 015e 49        		.uleb128 0x49
 1439 015f 13        		.uleb128 0x13
 1440 0160 00        		.byte	0
 1441 0161 00        		.byte	0
 1442 0162 1A        		.uleb128 0x1a
 1443 0163 2E        		.uleb128 0x2e
 1444 0164 01        		.byte	0x1
 1445 0165 3F        		.uleb128 0x3f
 1446 0166 0C        		.uleb128 0xc
 1447 0167 03        		.uleb128 0x3
 1448 0168 0E        		.uleb128 0xe
 1449 0169 3A        		.uleb128 0x3a
 1450 016a 0B        		.uleb128 0xb
 1451 016b 3B        		.uleb128 0x3b
 1452 016c 05        		.uleb128 0x5
 1453 016d 27        		.uleb128 0x27
 1454 016e 0C        		.uleb128 0xc
 1455 016f 49        		.uleb128 0x49
 1456 0170 13        		.uleb128 0x13
 1457 0171 3C        		.uleb128 0x3c
 1458 0172 0C        		.uleb128 0xc
 1459 0173 01        		.uleb128 0x1
 1460 0174 13        		.uleb128 0x13
 1461 0175 00        		.byte	0
 1462 0176 00        		.byte	0
 1463 0177 1B        		.uleb128 0x1b
 1464 0178 05        		.uleb128 0x5
 1465 0179 00        		.byte	0
 1466 017a 49        		.uleb128 0x49
 1467 017b 13        		.uleb128 0x13
 1468 017c 00        		.byte	0
GAS LISTING /tmp/ccCN8hQb.s 			page 31


 1469 017d 00        		.byte	0
 1470 017e 1C        		.uleb128 0x1c
 1471 017f 2E        		.uleb128 0x2e
 1472 0180 01        		.byte	0x1
 1473 0181 3F        		.uleb128 0x3f
 1474 0182 0C        		.uleb128 0xc
 1475 0183 03        		.uleb128 0x3
 1476 0184 0E        		.uleb128 0xe
 1477 0185 3A        		.uleb128 0x3a
 1478 0186 0B        		.uleb128 0xb
 1479 0187 3B        		.uleb128 0x3b
 1480 0188 0B        		.uleb128 0xb
 1481 0189 27        		.uleb128 0x27
 1482 018a 0C        		.uleb128 0xc
 1483 018b 49        		.uleb128 0x49
 1484 018c 13        		.uleb128 0x13
 1485 018d 3C        		.uleb128 0x3c
 1486 018e 0C        		.uleb128 0xc
 1487 018f 01        		.uleb128 0x1
 1488 0190 13        		.uleb128 0x13
 1489 0191 00        		.byte	0
 1490 0192 00        		.byte	0
 1491 0193 1D        		.uleb128 0x1d
 1492 0194 2E        		.uleb128 0x2e
 1493 0195 01        		.byte	0x1
 1494 0196 3F        		.uleb128 0x3f
 1495 0197 0C        		.uleb128 0xc
 1496 0198 03        		.uleb128 0x3
 1497 0199 0E        		.uleb128 0xe
 1498 019a 3A        		.uleb128 0x3a
 1499 019b 0B        		.uleb128 0xb
 1500 019c 3B        		.uleb128 0x3b
 1501 019d 05        		.uleb128 0x5
 1502 019e 27        		.uleb128 0x27
 1503 019f 0C        		.uleb128 0xc
 1504 01a0 3C        		.uleb128 0x3c
 1505 01a1 0C        		.uleb128 0xc
 1506 01a2 00        		.byte	0
 1507 01a3 00        		.byte	0
 1508 01a4 00        		.byte	0
 1509               		.section	.debug_loc,"",@progbits
 1510               	.Ldebug_loc0:
 1511               	.LLST0:
 1512 0000 0000 0000 		.long	.LFB1
 1513 0004 0000 0000 		.long	.LCFI0
 1514 0008 0300      		.word	0x3
 1515 000a 92        		.byte	0x92
 1516 000b 20        		.uleb128 0x20
 1517 000c 02        		.sleb128 2
 1518 000d 0000 0000 		.long	.LCFI0
 1519 0011 0000 0000 		.long	.LCFI1
 1520 0015 0200      		.word	0x2
 1521 0017 8C        		.byte	0x8c
 1522 0018 02        		.sleb128 2
 1523 0019 0000 0000 		.long	.LCFI1
 1524 001d 0000 0000 		.long	.LFE1
 1525 0021 0300      		.word	0x3
GAS LISTING /tmp/ccCN8hQb.s 			page 32


 1526 0023 8C        		.byte	0x8c
 1527 0024 8801      		.sleb128 136
 1528 0026 0000 0000 		.long	0
 1529 002a 0000 0000 		.long	0
 1530               	.LLST1:
 1531 002e 0000 0000 		.long	.LVL1
 1532 0032 0000 0000 		.long	.LVL7
 1533 0036 0200      		.word	0x2
 1534 0038 30        		.byte	0x30
 1535 0039 9F        		.byte	0x9f
 1536 003a 0000 0000 		.long	.LVL7
 1537 003e 0000 0000 		.long	.LVL9
 1538 0042 0100      		.word	0x1
 1539 0044 69        		.byte	0x69
 1540 0045 0000 0000 		.long	.LVL12
 1541 0049 0000 0000 		.long	.LVL13
 1542 004d 0100      		.word	0x1
 1543 004f 69        		.byte	0x69
 1544 0050 0000 0000 		.long	0
 1545 0054 0000 0000 		.long	0
 1546               	.LLST2:
 1547 0058 0000 0000 		.long	.LVL1
 1548 005c 0000 0000 		.long	.LVL9
 1549 0060 0200      		.word	0x2
 1550 0062 30        		.byte	0x30
 1551 0063 9F        		.byte	0x9f
 1552 0064 0000 0000 		.long	.LVL12
 1553 0068 0000 0000 		.long	.LVL13
 1554 006c 0200      		.word	0x2
 1555 006e 30        		.byte	0x30
 1556 006f 9F        		.byte	0x9f
 1557 0070 0000 0000 		.long	.LVL13
 1558 0074 0000 0000 		.long	.LVL22
 1559 0078 0100      		.word	0x1
 1560 007a 5C        		.byte	0x5c
 1561 007b 0000 0000 		.long	.LVL22
 1562 007f 0000 0000 		.long	.LVL24
 1563 0083 0300      		.word	0x3
 1564 0085 09        		.byte	0x9
 1565 0086 FF        		.byte	0xff
 1566 0087 9F        		.byte	0x9f
 1567 0088 0000 0000 		.long	.LVL24
 1568 008c 0000 0000 		.long	.LVL35
 1569 0090 0100      		.word	0x1
 1570 0092 5C        		.byte	0x5c
 1571 0093 0000 0000 		.long	0
 1572 0097 0000 0000 		.long	0
 1573               	.LLST3:
 1574 009b 0000 0000 		.long	.LVL1
 1575 009f 0000 0000 		.long	.LVL5
 1576 00a3 0200      		.word	0x2
 1577 00a5 4E        		.byte	0x4e
 1578 00a6 9F        		.byte	0x9f
 1579 00a7 0000 0000 		.long	.LVL5
 1580 00ab 0000 0000 		.long	.LVL8
 1581 00af 0100      		.word	0x1
 1582 00b1 68        		.byte	0x68
GAS LISTING /tmp/ccCN8hQb.s 			page 33


 1583 00b2 0000 0000 		.long	.LVL13
 1584 00b6 0000 0000 		.long	.LVL43
 1585 00ba 0100      		.word	0x1
 1586 00bc 5D        		.byte	0x5d
 1587 00bd 0000 0000 		.long	0
 1588 00c1 0000 0000 		.long	0
 1589               	.LLST4:
 1590 00c5 0000 0000 		.long	.LVL16
 1591 00c9 0000 0000 		.long	.LVL17
 1592 00cd 0600      		.word	0x6
 1593 00cf 68        		.byte	0x68
 1594 00d0 93        		.byte	0x93
 1595 00d1 01        		.uleb128 0x1
 1596 00d2 69        		.byte	0x69
 1597 00d3 93        		.byte	0x93
 1598 00d4 01        		.uleb128 0x1
 1599 00d5 0000 0000 		.long	.LVL17
 1600 00d9 0000 0000 		.long	.LVL18
 1601 00dd 0600      		.word	0x6
 1602 00df 68        		.byte	0x68
 1603 00e0 93        		.byte	0x93
 1604 00e1 01        		.uleb128 0x1
 1605 00e2 58        		.byte	0x58
 1606 00e3 93        		.byte	0x93
 1607 00e4 01        		.uleb128 0x1
 1608 00e5 0000 0000 		.long	.LVL36
 1609 00e9 0000 0000 		.long	.LVL39-1
 1610 00ed 0600      		.word	0x6
 1611 00ef 68        		.byte	0x68
 1612 00f0 93        		.byte	0x93
 1613 00f1 01        		.uleb128 0x1
 1614 00f2 69        		.byte	0x69
 1615 00f3 93        		.byte	0x93
 1616 00f4 01        		.uleb128 0x1
 1617 00f5 0000 0000 		.long	.LVL39
 1618 00f9 0000 0000 		.long	.LVL41
 1619 00fd 0600      		.word	0x6
 1620 00ff 68        		.byte	0x68
 1621 0100 93        		.byte	0x93
 1622 0101 01        		.uleb128 0x1
 1623 0102 69        		.byte	0x69
 1624 0103 93        		.byte	0x93
 1625 0104 01        		.uleb128 0x1
 1626 0105 0000 0000 		.long	0
 1627 0109 0000 0000 		.long	0
 1628               	.LLST5:
 1629 010d 0000 0000 		.long	.LVL1
 1630 0111 0000 0000 		.long	.LVL9
 1631 0115 0200      		.word	0x2
 1632 0117 30        		.byte	0x30
 1633 0118 9F        		.byte	0x9f
 1634 0119 0000 0000 		.long	.LVL12
 1635 011d 0000 0000 		.long	.LVL13
 1636 0121 0200      		.word	0x2
 1637 0123 30        		.byte	0x30
 1638 0124 9F        		.byte	0x9f
 1639 0125 0000 0000 		.long	.LVL13
GAS LISTING /tmp/ccCN8hQb.s 			page 34


 1640 0129 0000 0000 		.long	.LVL31
 1641 012d 0600      		.word	0x6
 1642 012f 5A        		.byte	0x5a
 1643 0130 93        		.byte	0x93
 1644 0131 01        		.uleb128 0x1
 1645 0132 5B        		.byte	0x5b
 1646 0133 93        		.byte	0x93
 1647 0134 01        		.uleb128 0x1
 1648 0135 0000 0000 		.long	.LVL32
 1649 0139 0000 0000 		.long	.LVL43
 1650 013d 0600      		.word	0x6
 1651 013f 5A        		.byte	0x5a
 1652 0140 93        		.byte	0x93
 1653 0141 01        		.uleb128 0x1
 1654 0142 5B        		.byte	0x5b
 1655 0143 93        		.byte	0x93
 1656 0144 01        		.uleb128 0x1
 1657 0145 0000 0000 		.long	0
 1658 0149 0000 0000 		.long	0
 1659               	.LLST6:
 1660 014d 0000 0000 		.long	.LVL1
 1661 0151 0000 0000 		.long	.LVL9
 1662 0155 0200      		.word	0x2
 1663 0157 30        		.byte	0x30
 1664 0158 9F        		.byte	0x9f
 1665 0159 0000 0000 		.long	.LVL12
 1666 015d 0000 0000 		.long	.LVL13
 1667 0161 0200      		.word	0x2
 1668 0163 30        		.byte	0x30
 1669 0164 9F        		.byte	0x9f
 1670 0165 0000 0000 		.long	.LVL24
 1671 0169 0000 0000 		.long	.LVL25
 1672 016d 0400      		.word	0x4
 1673 016f 80        		.byte	0x80
 1674 0170 8001      		.sleb128 128
 1675 0172 9F        		.byte	0x9f
 1676 0173 0000 0000 		.long	.LVL25
 1677 0177 0000 0000 		.long	.LVL26
 1678 017b 0600      		.word	0x6
 1679 017d 60        		.byte	0x60
 1680 017e 93        		.byte	0x93
 1681 017f 01        		.uleb128 0x1
 1682 0180 61        		.byte	0x61
 1683 0181 93        		.byte	0x93
 1684 0182 01        		.uleb128 0x1
 1685 0183 0000 0000 		.long	0
 1686 0187 0000 0000 		.long	0
 1687               	.LLST7:
 1688 018b 0000 0000 		.long	.LVL36
 1689 018f 0000 0000 		.long	.LVL43
 1690 0193 0600      		.word	0x6
 1691 0195 5E        		.byte	0x5e
 1692 0196 93        		.byte	0x93
 1693 0197 01        		.uleb128 0x1
 1694 0198 5F        		.byte	0x5f
 1695 0199 93        		.byte	0x93
 1696 019a 01        		.uleb128 0x1
GAS LISTING /tmp/ccCN8hQb.s 			page 35


 1697 019b 0000 0000 		.long	0
 1698 019f 0000 0000 		.long	0
 1699               	.LLST8:
 1700 01a3 0000 0000 		.long	.LVL18
 1701 01a7 0000 0000 		.long	.LVL19
 1702 01ab 0600      		.word	0x6
 1703 01ad 09        		.byte	0x9
 1704 01ae 80        		.byte	0x80
 1705 01af 8E        		.byte	0x8e
 1706 01b0 00        		.sleb128 0
 1707 01b1 1C        		.byte	0x1c
 1708 01b2 9F        		.byte	0x9f
 1709 01b3 0000 0000 		.long	.LVL19
 1710 01b7 0000 0000 		.long	.LVL20
 1711 01bb 0600      		.word	0x6
 1712 01bd 08        		.byte	0x8
 1713 01be 7E        		.byte	0x7e
 1714 01bf 8E        		.byte	0x8e
 1715 01c0 00        		.sleb128 0
 1716 01c1 1C        		.byte	0x1c
 1717 01c2 9F        		.byte	0x9f
 1718 01c3 0000 0000 		.long	.LVL20
 1719 01c7 0000 0000 		.long	.LVL21
 1720 01cb 0600      		.word	0x6
 1721 01cd 09        		.byte	0x9
 1722 01ce 80        		.byte	0x80
 1723 01cf 8E        		.byte	0x8e
 1724 01d0 00        		.sleb128 0
 1725 01d1 1C        		.byte	0x1c
 1726 01d2 9F        		.byte	0x9f
 1727 01d3 0000 0000 		.long	0
 1728 01d7 0000 0000 		.long	0
 1729               	.LLST9:
 1730 01db 0000 0000 		.long	.LVL38
 1731 01df 0000 0000 		.long	.LVL39-1
 1732 01e3 0100      		.word	0x1
 1733 01e5 6E        		.byte	0x6e
 1734 01e6 0000 0000 		.long	0
 1735 01ea 0000 0000 		.long	0
 1736               		.section	.debug_aranges,"",@progbits
 1737 0000 3400 0000 		.long	0x34
 1738 0004 0200      		.word	0x2
 1739 0006 0000 0000 		.long	.Ldebug_info0
 1740 000a 04        		.byte	0x4
 1741 000b 00        		.byte	0
 1742 000c 0000      		.word	0
 1743 000e 0000      		.word	0
 1744 0010 0000 0000 		.long	.LFB2
 1745 0014 0E00 0000 		.long	.LFE2-.LFB2
 1746 0018 0000 0000 		.long	.LFB3
 1747 001c 0E00 0000 		.long	.LFE3-.LFB3
 1748 0020 0000 0000 		.long	.LFB4
 1749 0024 0E00 0000 		.long	.LFE4-.LFB4
 1750 0028 0000 0000 		.long	.LFB1
 1751 002c 8402 0000 		.long	.LFE1-.LFB1
 1752 0030 0000 0000 		.long	0
 1753 0034 0000 0000 		.long	0
GAS LISTING /tmp/ccCN8hQb.s 			page 36


 1754               		.section	.debug_ranges,"",@progbits
 1755               	.Ldebug_ranges0:
 1756 0000 0000 0000 		.long	.LFB2
 1757 0004 0000 0000 		.long	.LFE2
 1758 0008 0000 0000 		.long	.LFB3
 1759 000c 0000 0000 		.long	.LFE3
 1760 0010 0000 0000 		.long	.LFB4
 1761 0014 0000 0000 		.long	.LFE4
 1762 0018 0000 0000 		.long	.LFB1
 1763 001c 0000 0000 		.long	.LFE1
 1764 0020 0000 0000 		.long	0
 1765 0024 0000 0000 		.long	0
 1766               		.section	.debug_line,"",@progbits
 1767               	.Ldebug_line0:
 1768 0000 A701 0000 		.section	.debug_str,"MS",@progbits,1
 1768      0200 8200 
 1768      0000 0201 
 1768      FB0E 0D00 
 1768      0101 0101 
 1769               	.LASF16:
 1770 0000 6372 6366 		.string	"crcflash"
 1770      6C61 7368 
 1770      00
 1771               	.LASF9:
 1772 0009 666E 6370 		.string	"fncptr"
 1772      7472 00
 1773               	.LASF25:
 1774 0010 2F68 6F6D 		.string	"/home/beto/github/TinyLoader/src"
 1774      652F 6265 
 1774      746F 2F67 
 1774      6974 6875 
 1774      622F 5469 
 1775               	.LASF29:
 1776 0031 5F5F 6164 		.string	"__addr16"
 1776      6472 3136 
 1776      00
 1777               	.LASF23:
 1778 003a 474E 5520 		.string	"GNU C 4.9.1 -mmcu=atmega328p -g -gdwarf-2 -Os -std=gnu99 -fpack-struct -fshort-enums -fun
 1778      4320 342E 
 1778      392E 3120 
 1778      2D6D 6D63 
 1778      753D 6174 
 1779               	.LASF27:
 1780 00f3 6461 7461 		.string	"data"
 1780      00
 1781               	.LASF3:
 1782 00f8 756E 7369 		.string	"unsigned char"
 1782      676E 6564 
 1782      2063 6861 
 1782      7200 
 1783               	.LASF22:
 1784 0106 6372 6331 		.string	"crc16_calc"
 1784      365F 6361 
 1784      6C63 00
 1785               	.LASF30:
 1786 0111 426F 6F74 		.string	"BootloaderVersion"
 1786      6C6F 6164 
GAS LISTING /tmp/ccCN8hQb.s 			page 37


 1786      6572 5665 
 1786      7273 696F 
 1786      6E00 
 1787               	.LASF7:
 1788 0123 6C6F 6E67 		.string	"long unsigned int"
 1788      2075 6E73 
 1788      6967 6E65 
 1788      6420 696E 
 1788      7400 
 1789               	.LASF19:
 1790 0135 5F5F 7265 		.string	"__result"
 1790      7375 6C74 
 1790      00
 1791               	.LASF26:
 1792 013e 5F5F 6A6D 		.string	"__jmain"
 1792      6169 6E00 
 1793               	.LASF11:
 1794 0146 6D61 696E 		.string	"main"
 1794      00
 1795               	.LASF6:
 1796 014b 756E 7369 		.string	"unsigned int"
 1796      676E 6564 
 1796      2069 6E74 
 1796      00
 1797               	.LASF8:
 1798 0158 6C6F 6E67 		.string	"long long unsigned int"
 1798      206C 6F6E 
 1798      6720 756E 
 1798      7369 676E 
 1798      6564 2069 
 1799               	.LASF4:
 1800 016f 7569 6E74 		.string	"uint8_t"
 1800      385F 7400 
 1801               	.LASF18:
 1802 0177 7275 6E61 		.string	"runapp"
 1802      7070 00
 1803               	.LASF10:
 1804 017e 7561 7274 		.string	"uart_tx"
 1804      5F74 7800 
 1805               	.LASF28:
 1806 0186 7561 7274 		.string	"uart_rx"
 1806      5F72 7800 
 1807               	.LASF15:
 1808 018e 5463 6F75 		.string	"Tcounter"
 1808      6E74 6572 
 1808      00
 1809               	.LASF17:
 1810 0197 5061 674E 		.string	"PagNm"
 1810      6D00 
 1811               	.LASF2:
 1812 019d 6C6F 6E67 		.string	"long long int"
 1812      206C 6F6E 
 1812      6720 696E 
 1812      7400 
 1813               	.LASF20:
 1814 01ab 7369 7A65 		.string	"sizetype"
 1814      7479 7065 
GAS LISTING /tmp/ccCN8hQb.s 			page 38


 1814      00
 1815               	.LASF12:
 1816 01b4 4275 6666 		.string	"Buffer"
 1816      6572 00
 1817               	.LASF13:
 1818 01bb 426F 6F74 		.string	"Boot_On"
 1818      5F4F 6E00 
 1819               	.LASF21:
 1820 01c3 5F5F 6565 		.string	"__eerd_byte_m328p"
 1820      7264 5F62 
 1820      7974 655F 
 1820      6D33 3238 
 1820      7000 
 1821               	.LASF5:
 1822 01d5 7569 6E74 		.string	"uint16_t"
 1822      3136 5F74 
 1822      00
 1823               	.LASF31:
 1824 01de 5F5F 6565 		.string	"__eeupd_byte_m328p"
 1824      7570 645F 
 1824      6279 7465 
 1824      5F6D 3332 
 1824      3870 00
 1825               	.LASF1:
 1826 01f1 6C6F 6E67 		.string	"long int"
 1826      2069 6E74 
 1826      00
 1827               	.LASF0:
 1828 01fa 7369 676E 		.string	"signed char"
 1828      6564 2063 
 1828      6861 7200 
 1829               	.LASF14:
 1830 0206 466C 6173 		.string	"Flash_Mod"
 1830      685F 4D6F 
 1830      6400 
 1831               	.LASF24:
 1832 0210 626F 6F74 		.string	"boot.c"
 1832      2E63 00
 1833               		.ident	"GCC: (GNU) 4.9.1"
GAS LISTING /tmp/ccCN8hQb.s 			page 39


DEFINED SYMBOLS
                            *ABS*:0000000000000000 boot.c
     /tmp/ccCN8hQb.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccCN8hQb.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccCN8hQb.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccCN8hQb.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccCN8hQb.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccCN8hQb.s:13     .init9:0000000000000000 __jmain
     /tmp/ccCN8hQb.s:106    .text.startup.main:0000000000000000 main
     /tmp/ccCN8hQb.s:60     .text.uart_tx:0000000000000000 uart_tx
     /tmp/ccCN8hQb.s:83     .text.uart_rx:0000000000000000 uart_rx
     /tmp/ccCN8hQb.s:603    .version:0000000000000000 BootloaderVersion

UNDEFINED SYMBOLS
__eerd_byte_m328p
crc16_calc
__eeupd_byte_m328p

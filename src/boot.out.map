Archive member included to satisfy reference by file (symbol)

/usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr5/libc.a(eerd_block_atmega328p.o)
                              boot.o (__eerd_block_m328p)
/usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr5/libc.a(eeupd_block_atmega328p.o)
                              boot.o (__eeupd_block_m328p)
/usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr5/libc.a(eeupd_byte_atmega328p.o)
                              boot.o (__eeupd_byte_m328p)

Discarded input sections

 .text          0x0000000000000000        0x0 boot.o
 .data          0x0000000000000000        0x0 boot.o
 .bss           0x0000000000000000        0x0 boot.o
 .progmem.data.BootloaderVersion
                0x0000000000000000        0x5 boot.o
 .text          0x0000000000000000        0x0 crc16.o
 .data          0x0000000000000000        0x0 crc16.o
 .bss           0x0000000000000000        0x0 crc16.o
 .text          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr5/libc.a(eerd_block_atmega328p.o)
 .data          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr5/libc.a(eerd_block_atmega328p.o)
 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr5/libc.a(eerd_block_atmega328p.o)
 .text          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr5/libc.a(eeupd_block_atmega328p.o)
 .data          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr5/libc.a(eeupd_block_atmega328p.o)
 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr5/libc.a(eeupd_block_atmega328p.o)
 .text          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr5/libc.a(eeupd_byte_atmega328p.o)
 .data          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr5/libc.a(eeupd_byte_atmega328p.o)
 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr5/libc.a(eeupd_byte_atmega328p.o)

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000020000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr5/libm.a
Address of section .text set to 0x7c00
LOAD boot.o
LOAD crc16.o
START GROUP
LOAD /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a
LOAD /usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr5/libm.a
LOAD /usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr5/libc.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000007c00      0x3de
 *(.vectors)
 *(.vectors)
 *(.progmem.gcc*)
                0x0000000000007c00                . = ALIGN (0x2)
                0x0000000000007c00                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000007c00        0x0 linker stubs
 *(.trampolines*)
                0x0000000000007c00                __trampolines_end = .
 *(.progmem*)
                0x0000000000007c00                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000007c00                __ctors_start = .
 *(.ctors)
                0x0000000000007c00                __ctors_end = .
                0x0000000000007c00                __dtors_start = .
 *(.dtors)
                0x0000000000007c00                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000000000007c00        0xe boot.o
                0x0000000000007c00                __jmain
 *(.init9)
 *(.text)
                0x0000000000007c0e                . = ALIGN (0x2)
 *(.text.*)
 .text.uart_tx  0x0000000000007c0e        0xe boot.o
                0x0000000000007c0e                uart_tx
 .text.flash_buff_load
                0x0000000000007c1c       0x26 boot.o
                0x0000000000007c1c                flash_buff_load
 .text.receive_block
                0x0000000000007c42       0x6a boot.o
                0x0000000000007c42                receive_block
 .text.startup.main
                0x0000000000007cac      0x29e boot.o
                0x0000000000007cac                main
 .text.crc16_calc
                0x0000000000007f4a       0x32 crc16.o
                0x0000000000007f4a                crc16_calc
 .text.avr-libc
                0x0000000000007f7c       0x20 /usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr5/libc.a(eerd_block_atmega328p.o)
                0x0000000000007f7c                __eerd_block_m328p
                0x0000000000007f80                __eerd_blraw_m328p
 .text.avr-libc
                0x0000000000007f9c       0x1e /usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr5/libc.a(eeupd_block_atmega328p.o)
                0x0000000000007f9c                __eeupd_block_m328p
 .text.avr-libc
                0x0000000000007fba       0x24 /usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr5/libc.a(eeupd_byte_atmega328p.o)
                0x0000000000007fba                __eeupd_byte_m328p
                0x0000000000007fbc                __eeupd_r18_m328p
                0x0000000000007fde                . = ALIGN (0x2)
 *(.fini9)
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 *(.fini0)
                0x0000000000007fde                _etext = .

.data           0x0000000000800100        0x0 load address 0x0000000000007fde
                0x0000000000800100                PROVIDE (__data_start, .)
 *(.data)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0000000000800100                . = ALIGN (0x2)
                0x0000000000800100                _edata = .
                0x0000000000800100                PROVIDE (__data_end, .)

.bss            0x0000000000800100        0x0
                0x0000000000800100                PROVIDE (__bss_start, .)
 *(.bss)
 *(.bss*)
 *(COMMON)
                0x0000000000800100                PROVIDE (__bss_end, .)
                0x0000000000007fde                __data_load_start = LOADADDR (.data)
                0x0000000000007fde                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0000000000800060        0x0
                0x0000000000800060                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0000000000800060                PROVIDE (__noinit_end, .)
                0x0000000000800060                _end = .
                0x0000000000800060                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x27
 *(.comment)
 .comment       0x0000000000000000       0x27 boot.o
                                         0x28 (size before relaxing)
 .comment       0x0000000000000027       0x28 crc16.o

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x0000000000000000       0x60
 *(.debug_aranges)
 .debug_aranges
                0x0000000000000000       0x40 boot.o
 .debug_aranges
                0x0000000000000040       0x20 crc16.o

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x0000000000000000      0x707
 *(.debug_info .gnu.linkonce.wi.*)
 .debug_info    0x0000000000000000      0x605 boot.o
 .debug_info    0x0000000000000605      0x102 crc16.o

.debug_abbrev   0x0000000000000000      0x2b8
 *(.debug_abbrev)
 .debug_abbrev  0x0000000000000000      0x23c boot.o
 .debug_abbrev  0x000000000000023c       0x7c crc16.o

.debug_line     0x0000000000000000      0x248
 *(.debug_line .debug_line.* .debug_line_end)
 .debug_line    0x0000000000000000      0x1d5 boot.o
 .debug_line    0x00000000000001d5       0x73 crc16.o

.debug_frame    0x0000000000000000       0xa8
 *(.debug_frame)
 .debug_frame   0x0000000000000000       0x84 boot.o
 .debug_frame   0x0000000000000084       0x24 crc16.o

.debug_str      0x0000000000000000      0x246
 *(.debug_str)
 .debug_str     0x0000000000000000      0x228 boot.o
                                        0x261 (size before relaxing)
 .debug_str     0x0000000000000228       0x1e crc16.o
                                        0x196 (size before relaxing)

.debug_loc      0x0000000000000000      0x49f
 *(.debug_loc)
 .debug_loc     0x0000000000000000      0x34d boot.o
 .debug_loc     0x000000000000034d      0x152 crc16.o

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges   0x0000000000000000       0x40
 *(.debug_ranges)
 .debug_ranges  0x0000000000000000       0x30 boot.o
 .debug_ranges  0x0000000000000030       0x10 crc16.o

.debug_macro
 *(.debug_macro)
OUTPUT(boot.out elf32-avr)
LOAD linker stubs
